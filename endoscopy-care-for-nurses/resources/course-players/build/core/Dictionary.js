dictionary_ll = {
    "delimiter": "`",
    "1151": " (and all its descendents) will be skipped.",
    "1013": " (and all of its descendents) should be disabled. ",
    "1051": " (and all of its descendents) should be hidden. ",
    "597": " (and all of its descendents) will be disabled because its attempt limit has been reached. ",
    "520": " (and all of its descendents) will be hidden because its Prevent Activation attribute is set to true. ",
    "1629": " ; Exception: n/a)",
    "1741": " and ",
    "1093": " and all its descendents to skipped. IsActive=",
    "1428": " and all of its descendents.",
    "1630": " are not siblings.",
    "1707": " are siblings.",
    "716": " because it has a stop forward traversal precondition rule and is a cluster.",
    "752": " because it has a stop forward traversal precondition rule and is a leaf.",
    "897": " because it has a stop forward traversal precondition rule.",
    "1386": " do not have a common ancestor",
    "606": " does not allow choice exit requests. Hiding all activities that are not its descendents.",
    "875": " does not allow flow navigation. Flow navigation is disabled.",
    "841": " does not allow previous navigation. Previous button is disabled.",
    "1317": " does not have suspended children.",
    "1220": " has Sequencing Control Choice = false).",
    "1508": " has suspended children.",
    "1716": " hundredths)",
    "1743": " is ",
    "1238": " is a descendent and will be disabled. ",
    "1275": " is a descendent and will be hidden. ",
    "842": " is a forward sibling so it and its descendents will be disabled.",
    "1531": " is after the activity ",
    "1509": " is before the activity ",
    "1276": " is currently active, stop disabling.",
    "1221": " is not a descendent and will be hidden.",
    "783": " is not a descendent of the previous/next activity and will be hidden.",
    "1343": " is not the last overall activity",
    "1407": " is the last overall activity",
    "55": " only allows it immediate siblings to be selected (constrained choice). Only activities that are logically next or previous and their descendents (plus the root) are all valid targets for choice, hiding all other activities.",
    "784": " since it does not allow flow navigation. Previous button is disabled.",
    "129": " since it does not allow flow navigation. Stopping here, continue button stays enabled even though request won't succeed. Continue results in user being prompted to select a child item.",
    "785": " since it only allows forward navigation. Previous button is disabled.",
    "1408": " will Stop Forward Traversal.",
    "361": " will be disabled because it is a cluster that does not allow flow navigation and thus its children must be selected explicitly.",
    "795": " will be disabled because its parent does not allow choice requests (",
    "843": " will be hidden because its isVisible attribute is set to false. ",
    "38": " will not succeed. Not initiating SCO unload yet. The EvaluatePossibleNavigationRequests will check to see if the nav request will succeed after re-evaluating all dirty data and if it will succeed, the SCO will be unloaded and it will be invoked.",
    "1471": " would flow to a cluster (",
    "1429": " would flow to an activity (",
    "1691": "' + operand + '",
    "1730": "' From GUI",
    "1472": "' corresponds to activity ",
    "1222": "' does not correspond to valid activity.",
    "1254": "' does not represent a valid activity.",
    "1387": "' represents a valid activity.",
    "1744": "', '",
    "1551": ") (Nothing to deliver)",
    "963": ") (The current activity must have already been exited)",
    "1492": ") (Violates control mode)",
    "1510": ") Violates control mode.",
    "1374": ") and the identified activity (",
    "927": ") and we're starting a new attempt on the root activity (",
    "940": ") and we're starting a new attempt on the root activity.",
    "1375": ") divided by counted measures (",
    "743": ") from the runtime will succeed now after re-evaluating with current data.",
    "1168": ") is Active for the activity is False Then",
    "1679": ") is a leaf Then",
    "952": ") is not a leaf Then - Can only deliver leaf activities",
    "1717": ") is tracked",
    "1552": ") is tracked, tracked=",
    "1014": ") that does not permit flow navigation, disabling.",
    "1015": ") that has a limit condition violation, disabling.",
    "1388": ") that is disabled, disabling.",
    "532": ") to the rollup condition bag (Add the evaluation of this condition the set of evaluated conditions)",
    "285": ") to the rollup condition bag to produce a single combined rule evaluation ('And' or 'Or' set of evaluated conditions, on the rollup definition)",
    "669": "), but Progress Measure is unknown, therefore CompletionStatus is unknown as well",
    "1731": "). Equals ",
    "1255": "**************************************",
    "1599": ", CompletionStatus=",
    "1449": ", Objective Measure Weight=",
    "1708": ", attempted = ",
    "704": ", had reached its attempt limit and cannot be delivered. Disable next button.",
    "670": ", had reached its attempt limit and cannot be delivered. Disable previous button.",
    "898": ", is disabled and cannot be delivered. Disable next button.",
    "864": ", is disabled and cannot be delivered. Disable previous button.",
    "1734": ", isExit=",
    "1692": ", notSatisfied=",
    "1712": ", returning 0",
    "1709": ", strPostData=",
    "1301": ", this.Api.NeedToCloseOutSession()=",
    "1409": ", this.ExitScormPlayerCalled=",
    "1718": ". Exception=",
    "223": "7.1.1.3.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception ",
    "1532": "; Traversal Direction: ",
    "1302": "API Runtime Nav Request Detected = ",
    "870": "About to save final data upon player exit, final exit calls = ",
    "1722": "Activities ",
    "1169": "Activity Progress Rollup Process [RB.1.3](",
    "906": "Activity Progress Rollup Using Default Process [RB.1.3 a](",
    "907": "Activity Progress Rollup Using Measure Process [RB.1.3 a](",
    "941": "Activity Progress Rollup Using Rules Process [RB.1.3 b](",
    "1123": "Adding new Comment From Learner at position ",
    "983": "Adding new Interaction Correct Response at position ",
    "1106": "Adding new Interaction Objective at position ",
    "1303": "Adding new Interaction at position ",
    "1344": "Adding new Objective at position ",
    "1304": "Adding new interaction at position ",
    "1389": "Adding new objective at index ",
    "1553": "Allowing status change",
    "533": "Bypassing Lookahead Sequencer processing because PackageProperties.LookaheadSequencerMode = disabled",
    "1600": "Call is error free.",
    "964": "Calling Integration Implementation UpdateControl State",
    "1390": "Check Activity Process [UP.5](",
    "1107": "Check Child for Rollup Subprocess [RB.1.4.2](",
    "1533": "CheckForGetValueError (",
    "1534": "CheckForSetValueError (",
    "1493": "Checking for Commit Error",
    "1494": "Checking for Finish Error",
    "1450": "Checking for GetValue Error",
    "1410": "Checking for Initialize Error",
    "1430": "Checking for Terminate Error",
    "1391": "Checking for first SCO pretest",
    "1277": "Checking for valid choice nav request",
    "1170": "Checking for valid choice/jump nav request",
    "1290": "Checking to see if the nav request (",
    "1094": "Choice Activity Traversal Subprocess [SB.2.4](",
    "1318": "Choice Flow Subprocess [SB.2.9.1](",
    "1030": "Choice Flow Tree Traversal Subprocess [SB.2.9.2](",
    "1152": "Choice Sequencing Request Process [SB.2.9](",
    "1108": "Clear Suspended Activity Subprocess [DB.2.1](",
    "1451": "Clearing Suspended Activity",
    "1652": "Cloning sequencer",
    "1653": "Close Out Session",
    "1723": "Closing Sco",
    "1736": "Commit('",
    "1071": "Communications Call Failed, Failed Submissions=",
    "1256": "Communications Save Data, synchronous=",
    "1319": "Communications_KillPostDataProcess",
    "1473": "Communications_SaveDataNow",
    "1411": "Communications_SaveDataOnExit",
    "1305": "Communications_StartPostDataProcess",
    "1568": "CompletedByMeasure = ",
    "648": "CompletedByMeasure is not enabled, using the completion status recorded by the SCO-",
    "1109": "Completion Measure Rollup Process [RB.1.1 b](",
    "1535": "Completion Threshold = ",
    "991": "Completion Threshold is known (Completion Treshold=",
    "623": "Completion Threshold is not specified, using the completion status recorded by the SCO-",
    "1601": "CompletionStatus = ",
    "1124": "Content Delivery Environment Process [DB.2](",
    "1125": "Continue Sequencing Request Process [SB.2.7]",
    "1278": "Control ClearPendingNavigationRequest",
    "1452": "Control CreateMenuItem for ",
    "1474": "Control DeliverActivity - ",
    "1536": "Control DisplayError - ",
    "1110": "Control Evaluate Possible Navigation Requests",
    "1511": "Control GetExceptionText",
    "1475": "Control GetXmlForDirtyData",
    "1631": "Control Initialize",
    "1512": "Control IsThereDirtyData",
    "1453": "Control MarkDirtyDataPosted",
    "1454": "Control MarkPostedDataClean",
    "1455": "Control MarkPostedDataDirty",
    "1111": "Control Recieved Abandon All Request From GUI",
    "1203": "Control Recieved Abandon Request From GUI",
    "1279": "Control Recieved Choice Request For '",
    "1306": "Control Recieved Close Sco From GUI",
    "1171": "Control Recieved Exit All Request From GUI",
    "1257": "Control Recieved Exit Request From GUI",
    "1258": "Control Recieved Next Request From GUI",
    "1172": "Control Recieved Previous Request From GUI",
    "1239": "Control Recieved Return To Lms From GUI",
    "1204": "Control Recieved Suspend Request From GUI",
    "1456": "Control RenderMenuItem for ",
    "1392": "Control ScoUnloaded called by ",
    "1431": "Control ToggleMenuVisibility",
    "1476": "Control TriggerReturnToLMS",
    "1280": "Control Unload: this.ProcessedUnload=",
    "1554": "Control Update Display",
    "1735": "Credit = ",
    "1457": "Current Activity is defined",
    "1376": "Current Activity is not defined",
    "908": "Current status is not attempted so changing based on score",
    "264": "DB.2]1.1. Exit Content Delivery Environment Process (Exception: DB.2-1) (Delivery request is invalid - The Current Activity has not been terminated)",
    "1632": "Deliver activity: ",
    "1320": "Delivery Request Process [DB.1.1](",
    "1537": "Deliverying Activity - ",
    "1126": "Done Evaluating Possible Navigation Requests",
    "965": "ERROR - Invalid server response received from the LMS.",
    "370": "ERROR - LMS was unable to successfully save state date, see the LMS response for specific error information. Server Response=",
    "562": "ERROR - Server side error occurred when saving state data, HTTP response not 200 (OK). Status: ",
    "1357": "ERROR - invalid rollup condition",
    "1377": "ERROR - invalid success status-",
    "246": "Either activity.HasSeqRulesRelevantToChoice = false or possibleNavRequest.WillNeverSucceed = true.  Setting possibleNavRequest.WillAlwaysSucceed = false.",
    "1602": "Element Not Matched",
    "1584": "Element is: _version",
    "1458": "Element is: adl nav request",
    "1321": "Element is: adl nav request choice",
    "1358": "Element is: adl nav request jump",
    "1173": "Element is: adl nav request valid continue",
    "1174": "Element is: adl nav request valid previous",
    "1393": "Element is: adl.data._children",
    "1459": "Element is: adl.data._count",
    "1538": "Element is: adl.data.id",
    "1495": "Element is: adl.data.n.id",
    "1432": "Element is: adl.data.n.store",
    "1477": "Element is: adl.data.store",
    "1496": "Element is: adl.data.type",
    "1460": "Element is: adl.nav.request",
    "1223": "Element is: adl.nav.request_valid.choice",
    "1175": "Element is: adl.nav.request_valid.continue",
    "1259": "Element is: adl.nav.request_valid.jump",
    "1176": "Element is: adl.nav.request_valid.previous",
    "1654": "Element is: audio",
    "1433": "Element is: audio captioning",
    "1539": "Element is: audio level",
    "1513": "Element is: audion level",
    "1585": "Element is: comments",
    "1224": "Element is: comments from leaner.comment",
    "1177": "Element is: comments from learner.location",
    "1153": "Element is: comments from learner.timestamp",
    "1412": "Element is: comments from lms",
    "1178": "Element is: comments, storing at position ",
    "1154": "Element is: comments_from_learner._children",
    "1225": "Element is: comments_from_learner._count",
    "1205": "Element is: comments_from_learner.comment",
    "1179": "Element is: comments_from_learner.location",
    "1155": "Element is: comments_from_learner.n.comment",
    "1127": "Element is: comments_from_learner.n.location",
    "1112": "Element is: comments_from_learner.n.timestamp",
    "1156": "Element is: comments_from_learner.timestamp",
    "1180": "Element is: comments_from_learner_children",
    "1240": "Element is: comments_from_lms._children",
    "1291": "Element is: comments_from_lms._count",
    "1281": "Element is: comments_from_lms.comment",
    "1260": "Element is: comments_from_lms.location",
    "1241": "Element is: comments_from_lms.n.comment",
    "1226": "Element is: comments_from_lms.n.location",
    "1206": "Element is: comments_from_lms.n.timestamp",
    "1242": "Element is: comments_from_lms.timestamp",
    "1359": "Element is: completion threshold",
    "1413": "Element is: completion_status",
    "1360": "Element is: completion_threshold",
    "1478": "Element is: core._children",
    "1497": "Element is: core._version",
    "1633": "Element is: credit",
    "1498": "Element is: deliver speed",
    "1479": "Element is: delivery speed",
    "1655": "Element is: entry",
    "1680": "Element is: exit",
    "1414": "Element is: interacitons.type",
    "1322": "Element is: interactions._children",
    "1378": "Element is: interactions._count",
    "1016": "Element is: interactions.correct responses.pattern",
    "1031": "Element is: interactions.correct_responses._count",
    "1017": "Element is: interactions.correct_responses.pattern",
    "1052": "Element is: interactions.corret_responses._count",
    "1292": "Element is: interactions.description",
    "1461": "Element is: interactions.id",
    "1361": "Element is: interactions.latency",
    "1207": "Element is: interactions.learner_response",
    "992": "Element is: interactions.n.correct_responses._count",
    "966": "Element is: interactions.n.correct_responses.n.pattern",
    "1261": "Element is: interactions.n.description",
    "1415": "Element is: interactions.n.id",
    "1323": "Element is: interactions.n.latency",
    "1157": "Element is: interactions.n.learner_response",
    "1128": "Element is: interactions.n.objectives._count",
    "1181": "Element is: interactions.n.objectives.n.id",
    "1345": "Element is: interactions.n.result",
    "1293": "Element is: interactions.n.timestamp",
    "1379": "Element is: interactions.n.type",
    "1294": "Element is: interactions.n.weighting",
    "1182": "Element is: interactions.objectives._count",
    "1262": "Element is: interactions.objectives.id",
    "1380": "Element is: interactions.result",
    "1208": "Element is: interactions.student_response",
    "1416": "Element is: interactions.text",
    "1417": "Element is: interactions.time",
    "1324": "Element is: interactions.timestamp",
    "1418": "Element is: interactions.type",
    "1325": "Element is: interactions.weighting",
    "1586": "Element is: language",
    "1540": "Element is: launch data",
    "1541": "Element is: launch_data",
    "1555": "Element is: learner id",
    "1514": "Element is: learner name",
    "1556": "Element is: learner_id",
    "1515": "Element is: learner_name",
    "1227": "Element is: learner_preference._children",
    "1072": "Element is: learner_preference.audio_captioning",
    "1183": "Element is: learner_preference.audio_level",
    "1113": "Element is: learner_preference.delivery_speed",
    "1243": "Element is: learner_preference.language",
    "1462": "Element is: lesson location",
    "1542": "Element is: lesson mode",
    "1499": "Element is: lesson status",
    "1463": "Element is: lesson_location",
    "1500": "Element is: lesson_status",
    "1587": "Element is: location",
    "1501": "Element is: mastery score",
    "1434": "Element is: max time allowed",
    "1435": "Element is: max_time_allowed",
    "1681": "Element is: mode",
    "1184": "Element is: nteractions.n.learner_response",
    "1362": "Element is: objectives._children",
    "1419": "Element is: objectives._count",
    "1228": "Element is: objectives.completion_status",
    "1326": "Element is: objectives.description",
    "1502": "Element is: objectives.id",
    "1185": "Element is: objectives.n.completion_status",
    "1295": "Element is: objectives.n.description",
    "1464": "Element is: objectives.n.id",
    "1209": "Element is: objectives.n.progress_measure",
    "1229": "Element is: objectives.n.score._children",
    "1327": "Element is: objectives.n.score.max",
    "1328": "Element is: objectives.n.score.min",
    "1329": "Element is: objectives.n.score.raw",
    "1282": "Element is: objectives.n.score.scaled",
    "1244": "Element is: objectives.n.success_status",
    "1245": "Element is: objectives.progress_measure",
    "1263": "Element is: objectives.score._children",
    "1363": "Element is: objectives.score.max",
    "1364": "Element is: objectives.score.min",
    "1365": "Element is: objectives.score.raw",
    "1307": "Element is: objectives.score.scaled",
    "1308": "Element is: objectives.score_scaled",
    "1420": "Element is: objectives.status",
    "1283": "Element is: objectives.success_status",
    "1436": "Element is: progress measure",
    "1437": "Element is: progress_measure",
    "1366": "Element is: scaled passing score",
    "1367": "Element is: scaled_passing_score",
    "1465": "Element is: score._children",
    "1569": "Element is: score.max",
    "1570": "Element is: score.min",
    "1571": "Element is: score.raw",
    "1516": "Element is: score.scaled",
    "1517": "Element is: session time",
    "1518": "Element is: session_time",
    "1656": "Element is: speed",
    "1557": "Element is: ssp._count",
    "1519": "Element is: ssp.allocate",
    "1480": "Element is: ssp.appendData",
    "1438": "Element is: ssp.bucket_state",
    "1588": "Element is: ssp.data",
    "1296": "Element is: ssp.n.allocation_success",
    "1439": "Element is: ssp.n.appendData",
    "1466": "Element is: ssp.n.bucket_id",
    "1394": "Element is: ssp.n.bucket_state",
    "1558": "Element is: ssp.n.data",
    "1589": "Element is: ssp.n.id",
    "1559": "Element is: student id",
    "1520": "Element is: student name",
    "1330": "Element is: student_data._children",
    "1230": "Element is: student_preference._children",
    "1481": "Element is: success status",
    "1482": "Element is: success_status",
    "1521": "Element is: suspend data",
    "1522": "Element is: suspend_data",
    "1682": "Element is: text",
    "1421": "Element is: time limit action",
    "1422": "Element is: time_limit_action",
    "1560": "Element is: total time",
    "1561": "Element is: total_time",
    "1603": "Element is: version",
    "1467": "End Attempt Process [UP.4](",
    "984": "Evaluate Possible Navigation Requests Process [EPNR]",
    "1032": "Evaluate Rollup Conditions Subprocess [RB.1.4.1](",
    "1309": "Evaluate Sequencing Rule Condition(",
    "1210": "Exit Sequencing Request Process [SB.2.11]",
    "1368": "Exiting Control Deliver Activity",
    "1395": "Exiting Control Update Display",
    "1129": "Flow Activity Traversal Subprocess [SB.2.2](",
    "1503": "Flow Subprocess [SB.2.3](",
    "1231": "Flow Tree Traversal Subprocess [SB.2.1](",
    "1523": "Found Dirty Data to Save",
    "1468": "Generating Exit Nav Request",
    "1331": "Generating Suspend All Nav Request",
    "1693": "GetDiagnostic('",
    "1683": "GetErrorString('",
    "1710": "GetLastError()",
    "1310": "GetSequencingControlChoice = false.",
    "1732": "GetValue('",
    "1469": "In ScoHasTerminatedSoUnload",
    "1346": "In SendDataToServer, synchronous=",
    "1311": "Initial Selection and Randomization",
    "1719": "Initialize('",
    "1720": "Initialized ",
    "1018": "Initializing Possible Navigation Request Absolutes",
    "1211": "Initializing Possible Navigation Requests",
    "442": "Invoking ScoHasTerminatedSoUnload from Terminate, scheduled for 150 ms. Control.IsThereAPendingNavigationRequest() = ",
    "1212": "Jump Sequencing Request Process [SB.2.13]",
    "1724": "LMSCommit('",
    "1725": "LMSFinish('",
    "1634": "LMSGetDiagnostic('",
    "1604": "LMSGetErrorString('",
    "1657": "LMSGetLastError()",
    "1713": "LMSGetValue('",
    "1694": "LMSInitialize('",
    "1714": "LMSSetValue('",
    "1347": "Launching intermediate page from ",
    "1264": "Limit Conditions Check Process [UP.1](",
    "1440": "Loading Sco In Frameset at: ",
    "1348": "Lookahead Sequencer Mode Disabled",
    "1369": "Lookahead Sequencer Mode Enabled",
    "1695": "MasteryScore = ",
    "1726": "Max Score: ",
    "1370": "Measure Rollup Process [RB.1.1](",
    "1727": "Min Score: ",
    "276": "Missing mastery score or raw score, but skipping auto-completion because compatibility setting ForceObjectiveCompletionSetByContent is set to true",
    "942": "Missing mastery score or raw score, setting to completed",
    "1738": "Mode = ",
    "1396": "Mode is review so don't change",
    "12": "NB.2.1]4.2.1. If the Sequencing Control Flow for the parent of the Current Activity is True And the Sequencing Control Forward Only for the parent of the Current Activity is False Then (Validate that a 'flow' sequencing request can be processed from the current activity)",
    "1033": "Nav request will NOT succeed. Leaving SCO loaded.",
    "1232": "Nav request will succeed. Unloading SCO.",
    "1297": "Navigation Request Process [NB.2.1](",
    "1684": "New Total Time: ",
    "1332": "New Tracked Total Time for Asset: ",
    "1524": "New Tracked Total Time: ",
    "1590": "Next entry is normal",
    "1591": "Next entry is resume",
    "1233": "No API Runtime Nav Request, exit action=",
    "1635": "No interaction at ",
    "1397": "No navigation request, exiting",
    "1265": "Not tracked...not transfering RTE data",
    "1019": "Objective Rollup Using Default Process [RB.1.2 c](",
    "1020": "Objective Rollup Using Measure Process [RB.1.2 a](",
    "1053": "Objective Rollup Using Rules Process [RB.1.2 b](",
    "1349": "Objective RollupProcess [RB.1.2](",
    "953": "Objective element is undefined, returning empty string.",
    "1371": "Overall Rollup Process [RB.1.5](",
    "1350": "Overall Sequencing Process [OP.1]",
    "1021": "OverallSequencingProcess for SCORM 1.1 / SCORM 1.2",
    "1158": "Performing sequencing look ahead evaluation",
    "1423": "Pre-evaluation of exit action",
    "1022": "Pretest satisfied, marking all activities complete",
    "1130": "Previous Sequencing Request Process [SB.2.8]",
    "1696": "Previous Time: ",
    "1605": "Progress Measure = ",
    "615": "Progress Measure exceeds Completion Threshold so setting completion status to completed.",
    "569": "Progress Measure is less than Completion Threshold so setting completion status to incomplete.",
    "1543": "RB.1.1]5.1.2. Break For",
    "1333": "Randomize Children Process [SR.2](",
    "1441": "Recorded CompletionStatus = ",
    "1504": "Recorded SuccessStatus = ",
    "1095": "Resume All Sequencing Request Process [SB.2.6]",
    "1562": "RetrieveGetValueData (",
    "1186": "Retry Sequencing Request Process [SB.2.10]",
    "1525": "Rolling up activity data",
    "1266": "Rollup Rule Check Subprocess [RB.1.4](",
    "1658": "Root Activity is ",
    "1351": "RunTimeApi_ImmediateRollup called",
    "1213": "RunTimeApi_IsValidArrayOfLocalizedStrings",
    "1214": "RunTimeApi_IsValidArrayOfShortIdentifiers",
    "1572": "RunTimeApi_IsValidUrn",
    "1483": "RunTimeApi_ValidCharString",
    "1398": "RunTimeApi_ValidFillInResponse",
    "1484": "RunTimeApi_ValidIdentifier",
    "1526": "RunTimeApi_ValidLanguage",
    "1399": "RunTimeApi_ValidLikeRTResponse",
    "1381": "RunTimeApi_ValidLocalizedString",
    "1334": "RunTimeApi_ValidLongFillInResponse",
    "1400": "RunTimeApi_ValidLongIdentifier",
    "1372": "RunTimeApi_ValidMatchingResponse",
    "1267": "RunTimeApi_ValidMultipleChoiceResponse",
    "1382": "RunTimeApi_ValidNumericResponse",
    "1442": "RunTimeApi_ValidOtheresponse",
    "1312": "RunTimeApi_ValidPerformanceResponse",
    "1592": "RunTimeApi_ValidReal",
    "1335": "RunTimeApi_ValidSequencingResponse",
    "1383": "RunTimeApi_ValidShortIdentifier",
    "1593": "RunTimeApi_ValidTime",
    "1443": "RunTimeApi_ValidTimeInterval",
    "1352": "RunTimeApi_ValidTrueFalseResponse",
    "13": "SB.2.9]11.9.1.1. If Activity is Active for the activity is False And (the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "14": "SB.2.9]12.9.1.1. If Activity is Active for the activity is False And (the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "928": "SCO requested a Suspend All, setting exit type to suspend",
    "1284": "SCORM ERROR FOUND - Set Error State: ",
    "1544": "SSP Call is error free.",
    "570": "Scaled Passing Score is known, but score is unknown, therefore SuccessStaus is unknown as well",
    "640": "Scaled Passing Score is not specified, using the success status recorded by the SCO-",
    "696": "Scaled Score exceeds Scaled Passing Score so setting success status to passed.",
    "649": "Scaled Score is less than Scaled Passing Score so setting success status to failed.",
    "1573": "ScaledPassingScore = ",
    "809": "Sco is completed so resetting credit to no-credit and mode to review",
    "1527": "Sco was taken for credit",
    "1737": "Score = ",
    "1234": "Score exceeds mastery, setting to passed",
    "1187": "Score less than mastery, setting to failed",
    "1384": "Select Children Process [SR.1](",
    "1054": "Sequencing Exit Action Rules Subprocess [TB.2.1]",
    "993": "Sequencing Post Condition Rules Subprocess [TB.2.2]",
    "1285": "Sequencing Request Process [SB.2.12](",
    "1268": "Sequencing Rules Check Process [UP.2](",
    "1159": "Sequencing Rules Check Subprocess [UP.2.1](",
    "1563": "Server Responded With:",
    "1711": "Session Time: ",
    "1733": "SetValue('",
    "1444": "Setting Current Activity to ",
    "833": "Setting WillNeverSucceed = true on all child activities. (Count = ",
    "1298": "Setting completion status to browsed",
    "1073": "Setting sequencer pointer for cloned activities",
    "224": "Skipping ContentDeliveryEnvironmentActivityDataSubProcess because content is LAUNCH AFTER CLICK.  This method will get called when activity is actually viewed",
    "1215": "Start Sequencing Request Process [SB.2.5]",
    "753": "Status has been set, checking to override to passed/failed based on score",
    "1445": "StatusSetInCurrentSession = ",
    "1721": "StoreValue (",
    "1728": "Stored as: ",
    "1685": "SuccessStatus = ",
    "1564": "Suspended Activity is ",
    "1424": "Suspended Activity is defined",
    "1353": "Suspended Activity is not defined",
    "397": "SuspendedActivityDefined[SB.2.6]2. If the Suspended Activity is Not Defined Then (Make sure there is something to resume)",
    "1606": "Suspending Activity",
    "341": "Suspending Activity (no nav request because the package property LogoutCausesPlayerExit precludes logout from causing a suspend all)",
    "475": "TB.2.3]3.3.3. If the Sequencing Post Condition Rule Subprocess returned a termination request of Exit All Then",
    "181": "TB.2.3]3.4. If the Current Activity is the Root of the Activity Tree AND the sequencing request returned by the Sequencing Post Condition Rule Subprocess is not Retry Then",
    "452": "TB.2.3]3.4.1. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: Exit; Exception n/a)",
    "909": "TB.2.3]3.5. Until processed exit is False (processed exit=",
    "1565": "Tearing down sequencer",
    "1114": "Terminate Descendent Attempts Process [UP.3](",
    "1729": "Terminate('",
    "1286": "Termination Request Process [TB.2.3](",
    "834": "The Return To LMS button should be not be available for selection.",
    "1697": "The activities ",
    "1715": "The activity ",
    "1336": "The common ancestor of activities ",
    "1686": "The identifier '",
    "1337": "The runtime navigation request of ",
    "774": "This activity utilized a launchable Asset, so automatically complete it",
    "844": "Time limit exceeded, automatically returning user from the course",
    "1115": "Time limit exceeded, blocking entry to course",
    "1269": "Transferring RTE data to Activity data",
    "417": "UP.1]10. Exit Limit Conditions Check Process (Limit Condition Violated: False) (No limit conditions have been violated)",
    "994": "UnLoading Sco and launching intermediate page from ",
    "1313": "Updating display for each menu item",
    "910": "User requested a Suspend All, setting exit type to suspend",
    "1034": "WARNING - Unable to normalize score - Raw Score: ",
    "349": "WARNING: The value 'logout' has been deprecated by ADL and should no longer be used. This value may lead to unpredictable behavior.",
    "1594": "WillAlwaysSucceed = ",
    "1607": "WillNeverSucceed = ",
    "871": "[DB.1.1]1. If the activity specified by the delivery request (",
    "581": "[DB.1.1]1.1. Exit Delivery Request Process (Delivery Request: Not Valid; Exception: DB.1.1-1)",
    "207": "[DB.1.1]2. Form the activity path as the ordered series of activities from the root of the activity tree to the activity specified in the delivery request, inclusive",
    "835": "[DB.1.1]3. If the activity path is Empty Then - Nothing to deliver",
    "582": "[DB.1.1]3.1. Exit Delivery Request Process (Delivery Request: Not Valid; Exception: DB.1.1-2)",
    "528": "[DB.1.1]4. For each activity in the activity path - Make sure each activity along the path is allowed",
    "856": "[DB.1.1]4.1. Apply the Check Activity Process to the activity - ",
    "899": "[DB.1.1]4.2. If the Check Activity Process return True Then",
    "563": "[DB.1.1]4.2.1. Exit Delivery Request Process (Delivery Request: Not Valid; Exception: DB.1.1-3)",
    "658": "[DB.1.1]5. Exit Delivery Request Process (Delivery Request: Valid; Exception: n/a)",
    "604": "[DB.2.1]1. If the Suspended Activity is Defined Then Make sure there is something to clear",
    "598": "[DB.2.1]1.1. Find the common ancestor of the identified activity and the Suspended Activity",
    "342": "[DB.2.1]1.2. Form an activity path as the ordered series of activities from the Suspended Activity to the common ancestor, inclusive",
    "995": "[DB.2.1]1.3. If the activity path is Not Empty Then",
    "334": "[DB.2.1]1.3.1. For each activity in the activity path (Walk down the tree setting each of the identified activities to not suspended)",
    "1074": "[DB.2.1]1.3.1.1. If the activity is a leaf Then",
    "786": "[DB.2.1]1.3.1.1.1. Set Activity is Suspended for the activity to False",
    "1574": "[DB.2.1]1.3.1.2. Else",
    "398": "[DB.2.1]1.3.1.2.1. If the activity does not include any child activity whose Activity is Suspended attribute is True Then",
    "765": "[DB.2.1]1.3.1.2.1.1. Set Activity is Suspended for the activity to False",
    "607": "[DB.2.1]1.4. Set Suspended Activity to Undefined (Clear the Suspended Activity attribute)",
    "996": "[DB.2.1]2. Exit Clear Suspended Activity Subprocess",
    "200": "[DB.2]1.If the Activity is Active for the Current Activity is True Then (If the attempt on the current activity has not been terminated, we cannot deliver new content)",
    "208": "[DB.2]2. If the activity identified for delivery is not equal to the Suspended Activity Then (Content is about to be delivered, clear any existing suspend all state)",
    "554": "[DB.2]2.1. Apply the Clear Suspended Activity Subprocess to the activity identified for delivery",
    "230": "[DB.2]3. Apply the Terminate Descendent Attempts Process to the activity identified for delivery (Make sure that all attempts that should end are terminated)",
    "66": "[DB.2]4.Form the activity path as the ordered series of activities from the root of the activity tree to the activity identified for delivery, inclusive (Begin all attempts required to deliver the identified activity)",
    "1075": "[DB.2]5. For each activity in the activity path",
    "1528": "[DB.2]5.1. If Activity (",
    "977": "[DB.2]5.1.1. If Tracked for the activity is True Then",
    "114": "[DB.2]5.1.1.1. If Activity is Suspended for the activity is True Then (If the previous attempt on the activity ended due to a suspension, clear the suspended state; do not start a new attempt)",
    "810": "[DB.2]5.1.1.1.1. Set Activity is Suspended for the activity to False",
    "1608": "[DB.2]5.1.1.2. Else",
    "485": "[DB.2]5.1.1.2.1. Increment the Activity Attempt Count for the activity (Begin a new attempt on the activity)",
    "357": "[DB.2]5.1.1.2.2. If Activity Attempt Count for the activity is equal to One (1) Then (Is this the first attempt on the activity?)",
    "766": "[DB.2]5.1.1.2.2.1. Set Activity Progress Status for the activity to True",
    "161": "[DB.2]5.1.1.2.3. Initialize Objective Progress Information and Attempt Progress Information required for the new attempt. Initialize tracking information for the new attempt.",
    "796": "[DB.2]5.1.1.2.4. If objectives global to system is false (obj global=",
    "544": "[DB.2]5.1.1.2.4.1. Reset any global objectives and initialize the activity tree for a new attempt.",
    "697": "[DB.2]5.1.1.2.5. If shared data global to system is false (shared data global=",
    "671": "[DB.2]5.1.1.2.5.1. Reset any shared data associated with this attempt on content.",
    "887": "[DB.2]5.1.2. Set Activity is Active for the activity to True",
    "231": "[DB.2]6. The activity identified for delivery becomes the current activity Set Current Activity to the activity identified for delivery. Identified Activity=",
    "1131": "[DB.2]7. Set Suspended Activity to undefined",
    "819": "[DB.2]8. Exit Content Delivery Environment Process (Exception: n/a)",
    "820": "[DB.2]9. Exit Content Delivery Environment Process (Exception: n/a)",
    "1740": "[EPNR]",
    "1739": "[EPNR] ",
    "787": "[EPNR] 1. Run the navigation request process for each possible request",
    "754": "[EPNR] 1.1. If the navigation request fails, set its WillSucceed to false",
    "722": "[EPNR] 1.2. If the navigation request succeeds, set its WillSucceed to true",
    "215": "[EPNR] 2. If the current activity is active (we are going to need to terminate it for internally navigating sequencing requests (continue, previous, choice, exit)",
    "954": "[EPNR] 2.1 Run the Termination Request Process for Exit",
    "514": "[EPNR] 2.2 There's a rare situation where the suspend all termination request can fail, so check for it",
    "911": "[EPNR] 2.2 if the termination request process return false",
    "857": "[EPNR] 2.2.1 Run the Termination Request Process For Suspend All",
    "717": "[EPNR] 2.2.1 Set the possible navigations that result in sequencing to false",
    "293": "[EPNR] 2.3 If there's an exit all request, the termination request process performs sequencing actions that are relevant later on, so do those.",
    "659": "[EPNR] 2.5. For each possible navigation request that hasn't already been excluded",
    "865": "[EPNR] 2.5.1. Check for disabled and limit condition violations",
    "744": "[EPNR] 2.5.1.1. Activity is disabled, mark it and its children as disabled",
    "677": "[EPNR] 3. For each possible navigation request that hasn't already been excluded",
    "624": "[EPNR] 3.1 If there is a sequencing request returned by the termination request process",
    "418": "[EPNR] 3.1.1 Run the sequencing request process for that sequencing request returned by the termination request process",
    "1035": "[EPNR] 3.1.2 Make sure the activity is not hidden",
    "1636": "[EPNR] 3.1.2. Else",
    "718": "[EPNR] 3.1.3. Run the sequencing request process for that navigation request",
    "836": "[EPNR] 3.2. If the Sequencing Request Process returns an exception",
    "1287": "[EPNR] 3.2.1 Set WillSucceed to false",
    "1116": "[EPNR] 3.2.2 Run the Delivery Request Process",
    "705": "[EPNR] 3.2.2 Set will succed to the results of the delivery request process (",
    "362": "[EPNR] 4. Set any requests that are invalid due to Control Choice, Prevent Activation or Constrained Choice violations to hidden",
    "1485": "[EPNR] 4.1 Hiding request ",
    "430": "[EPNR] 5.1 Overriding continue status based on 3rd Edition GUI requirements, parent's flow = true, continue is enabled",
    "405": "[EPNR] 5.2 Overriding continue status based on 3rd Edition GUI requirements, parent's flow = false, continue is disabled",
    "1188": "[EPNR] A precondition rule indicates that ",
    "1401": "[EPNR] A precondition rule on ",
    "1288": "[EPNR] Cannot flow backwards through ",
    "1470": "[EPNR] Cannot flow through ",
    "390": "[EPNR] Check each activity for sequencing rules that are independent of context (i.e. independent of the current activity)",
    "811": "[EPNR] Check rules that rely on the context of the current activity.",
    "985": "[EPNR] Clearing out possible navigation request data",
    "837": "[EPNR] Current activity is undefined, flow navigation is disabled.",
    "723": "[EPNR] Current activity is undefined, not checking context dependent rules.",
    "1698": "[EPNR] Disable ",
    "1338": "[EPNR] Disable the descendents of ",
    "1246": "[EPNR] Disable the forward siblings of ",
    "26": "[EPNR] Encountered a cluster that must be entered forward only. This traversal is beyond the capabilities of the 'quick' look ahead sequencer. If this navigation request results in an error message, then this course requires the full look ahead sequencer.",
    "788": "[EPNR] Evaluate all precondition rules that could affect the activity.",
    "521": "[EPNR] Run the Termination Request Process To Move Current Runtime Data to Sequencer and Invoke Rollup",
    "1659": "[EPNR] Selecting ",
    "1699": "[EPNR] Setting ",
    "1385": "[EPNR] The current activity is ",
    "302": "[EPNR] The current activity's parent only allows Forward Traversal. Disable all of the parent's children that are before the active activity.",
    "1270": "[EPNR] The logically next activity is ",
    "1314": "[EPNR] The logically next activity,",
    "1189": "[EPNR] The logically previous activity is ",
    "1247": "[EPNR] The logically previous activity,",
    "486": "[EPNR] There is either no previous activity or all previous activities are skipped, disable previous button.",
    "1160": "[EPNR] There is no logically next activity.",
    "1076": "[EPNR] There is no logically previous activity.",
    "1023": "[EPNR] Using the 'Quick' Lookahead Sequencing Mode",
    "463": "[NB.2.1]1.1. If the Current Activity is Not Defined Then (Make sure the sequencing session has not already begun)",
    "209": "[NB.2.1]1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Start; Target Activity: n/a; Exception: n/a)",
    "1660": "[NB.2.1]1.2. Else",
    "176": "[NB.2.1]1.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-1)",
    "1161": "[NB.2.1]1.Case: navigation request is Start",
    "1077": "[NB.2.1]10. Case: navigation request is Abandon",
    "506": "[NB.2.1]10.1. If the Current Activity is Defined Then (Make sure the sequencing session has already begun)",
    "286": "[NB.2.1]10.1.1. If the Activity is Active for the Current Activity is True Then (Make sure the current activity has not already been terminated)",
    "182": "[NB.2.1]10.1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Abandon; Sequencing Request: Exit; Target Activity: n/a; Exception: n/a)",
    "1595": "[NB.2.1]10.1.2. Else",
    "153": "[NB.2.1]10.1.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-12)",
    "1609": "[NB.2.1]10.2. Else ",
    "166": "[NB.2.1]10.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-2)",
    "997": "[NB.2.1]11. Case: navigation request is Abandon All",
    "277": "[NB.2.1]11.1. If the Current Activity is Defined Then (If the sequencing session has already begun, unconditionally abandon all active activities)",
    "167": "[NB.2.1]11.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Abandon All; Sequencing Request: Exit; Target Activity: n/a; Exception: n/a)",
    "1637": "[NB.2.1]11.2. Else",
    "162": "[NB.2.1]11.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-2) ",
    "998": "[NB.2.1]12. Case: navigation request is Suspend All",
    "538": "[NB.2.1]12.1. If the Current Activity is Defined Then (If the sequencing session has already begun)",
    "168": "[NB.2.1]12.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Suspend All; Sequencing Request: Exit; Target Activity: n/a; Exception: n/a)",
    "1638": "[NB.2.1]12.2. Else",
    "169": "[NB.2.1]12.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-2)",
    "1132": "[NB.2.1]13. Case: navigation request is Jump",
    "94": "[NB.2.1]13. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-13) (Undefined navigation request)",
    "21": "[NB.2.1]13.1. If the activity specified by the Jump navigation request exists within the activity tree And Available Children for the parent of the activity contains the activity Then (Make sure the target activity exists in the activity tree and is available)",
    "68": "[NB.2.1]13.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Jump; Target Activity: the activity specified by the Jump navigation request; Exception: n/a)",
    "79": "[NB.2.1]13.1.2. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-11) (Target activity does not exist.)",
    "1639": "[NB.2.1]13.2. Else",
    "80": "[NB.2.1]13.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-11) (Target activity does not exist.)",
    "95": "[NB.2.1]14. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-13) (Undefined navigation request)",
    "1036": "[NB.2.1]2. Case: navigation request is Resume All",
    "464": "[NB.2.1]2.1. If the Current Activity is Not Defined Then (Make sure the sequencing session has not already begun)",
    "335": "[NB.2.1]2.1.1. If the Suspended Activity is Defined Then (Make sure the previous sequencing session ended with a suspend all request)",
    "170": "[NB.2.1]2.1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Resume All; Target Activity: n/a; Exception: n/a) ",
    "1596": "[NB.2.1]2.1.2. Else ",
    "163": "[NB.2.1]2.1.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-3)",
    "1661": "[NB.2.1]2.2. Else",
    "177": "[NB.2.1]2.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-1)",
    "1078": "[NB.2.1]3. Case: navigation request is Continue",
    "480": "[NB.2.1]3.1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "178": "[NB.2.1]3.1.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-2)",
    "40": "[NB.2.1]3.2. If the Current Activity is not the root of the activity tree And the Sequencing Control Flow for the parent of the Current Activity is True Then (Validate that a 'flow' sequencing request can be processed from the current activity)",
    "212": "[NB.2.1]3.2.1. If the Activity is Active for the Current Activity is True Then (If the current activity has not been terminated, terminate the current the activity)",
    "183": "[NB.2.1]3.2.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Continue; Target Activity: n/a; Exception: n/a)",
    "1610": "[NB.2.1]3.2.2. Else",
    "186": "[NB.2.1]3.2.2.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Continue; Target Activity: n/a; Exception: n/a)",
    "1662": "[NB.2.1]3.3. Else",
    "34": "[NB.2.1]3.3.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-4) (Flow is not enabled or the current activity is the root of the activity tree)",
    "1079": "[NB.2.1]4. Case: navigation request is Previous",
    "481": "[NB.2.1]4.1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "184": "[NB.2.1]4.1.1.Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-2)",
    "239": "[NB.2.1]4.2. If the Current Activity is not the root of the activity tree Then (There is no activity logically 'previous' to the root of the activity tree)",
    "202": "[NB.2.1]4.2.1.1. If the Activity is Active for the Current Activity is True Then (If the current activity has not been terminated, terminate the current the activity)",
    "171": "[NB.2.1]4.2.1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Previous; Target Activity: n/a; Exception: n/a)",
    "1575": "[NB.2.1]4.2.1.2. Else",
    "179": "[NB.2.1]4.2.1.2.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Previous; Target Activity: n/a; Exception: n/a)",
    "1611": "[NB.2.1]4.2.2. Else",
    "100": "[NB.2.1]4.2.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-5) (Violates control mode)",
    "1663": "[NB.2.1]4.3. Else",
    "50": "[NB.2.1]4.3.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-6) (Cannot move backward from the root of the activity tree)",
    "797": "[NB.2.1]5. Case: navigation request is Forward (Behavior not defined)",
    "187": "[NB.2.1]5.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-7)",
    "789": "[NB.2.1]6. Case: navigation request is Backward (Behavior not defined)",
    "188": "[NB.2.1]6.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-7)",
    "1096": "[NB.2.1]7. Case: navigation request is Choice ",
    "195": "[NB.2.1]7.1. If the activity specified by the Choice navigation request exists within the activity tree Then (Make sure the target activity exists in the activity tree)",
    "2": "[NB.2.1]7.1.1. If the activity specified by the Choice navigation request is the root of the activity tree Or the Sequencing Control Choice for the parent of the activity specified by the Choice navigation request is True Then (Validate that a 'choice' sequencing request can be processed on the target activity)",
    "443": "[NB.2.1]7.1.1.1. If the Current Activity is Not Defined Then (Attempt to start the sequencing session through choice)",
    "59": "[NB.2.1]7.1.1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Choice; Target Activity: the activity specified by the Choice navigation request; Exception: n/a)",
    "399": "[NB.2.1]7.1.1.2. If the activity specified by the Choice navigation request is Not a sibling of the Current Activity Then",
    "124": "[NB.2.1]7.1.1.2. If the activity specified by the Choice navigation request is Not a sibling of the Current Activity Then (We are always allowed to choose a sibling of the current activity)",
    "365": "[NB.2.1]7.1.1.2.1. Find the common ancestor of the Current Activity and the activity specified by the Choice navigation request",
    "1": "[NB.2.1]7.1.1.2.2. Form the activity path as the ordered series of activities from the Current Activity to the common ancestor (The common ancestor will not terminate as a result of processing the choice sequencing request, unless the common ancestor is the Current Activity - the current activity should always be included in the activity path)",
    "929": "[NB.2.1]7.1.1.2.3. If the activity path is Not Empty Then",
    "96": "[NB.2.1]7.1.1.2.3.1. For each activity in the activity path (Make sure that 'choosing' the target will not force an active activity to terminate, if that activity does not allow choice to terminate it)",
    "216": "[NB.2.1]7.1.1.2.3.1.1. If Activity is Active for the activity is True And the Sequencing Control Choice Exit for the activity is False Then (Activity Identifier-",
    "172": "[NB.2.1]7.1.1.2.3.1.1.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: ",
    "86": "[NB.2.1]7.1.1.2.3.1.1.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-8) (Violates control mode)",
    "1545": "[NB.2.1]7.1.1.2.4. Else",
    "145": "[NB.2.1]7.1.1.2.4.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-9)",
    "46": "[NB.2.1]7.1.1.3. If Activity is Active for the Current Activity is True And the Sequencing Control Choice Exit for the Current Activity is False Then (The Choice target is a sibling to the Current Activity, check if the Current Activity)",
    "203": "[NB.2.1]7.1.1.3. If the Activity is Active for the Current Activity is True Then (If the current activity has not been terminated, terminate the current the activity)",
    "56": "[NB.2.1]7.1.1.3.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Choice; Target Activity: the activity specified by the Choice navigation request; Exception: n/a) ",
    "1576": "[NB.2.1]7.1.1.4. Else",
    "204": "[NB.2.1]7.1.1.4. If the Activity is Active for the Current Activity is True Then (If the current activity has not been terminated, terminate the current the activity)",
    "57": "[NB.2.1]7.1.1.4.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Choice; Target Activity: the activity specified by the Choice navigation request; Exception: n/a) ",
    "60": "[NB.2.1]7.1.1.4.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Choice; Target Activity: the activity specified by the Choice navigation request; Exception: n/a)",
    "1577": "[NB.2.1]7.1.1.5. Else",
    "61": "[NB.2.1]7.1.1.5.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: n/a; Sequencing Request: Choice; Target Activity: the activity specified by the Choice navigation request; Exception: n/a)",
    "1612": "[NB.2.1]7.1.2. Else",
    "99": "[NB.2.1]7.1.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Termination Request: n/a; Sequencing Request: n/a; Target Activity: n/a; Exception: NB.2.1-10) (Violates control mode)",
    "1664": "[NB.2.1]7.2. Else",
    "87": "[NB.2.1]7.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-11) (Target activity does not exist)",
    "1162": "[NB.2.1]8. Case: navigation request is Exit",
    "507": "[NB.2.1]8.1. If the Current Activity is Defined Then (Make sure the sequencing session has already begun)",
    "193": "[NB.2.1]8.1.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit; Sequencing Request: Exit; Target Activity: n/a) ; Exception: n/a)",
    "1613": "[NB.2.1]8.1.2. Else",
    "75": "[NB.2.1]8.1.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-12) (Activity has already terminated )",
    "1665": "[NB.2.1]8.2. Else",
    "173": "[NB.2.1]8.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-2) ",
    "1080": "[NB.2.1]9. Case: navigation request is Exit All",
    "269": "[NB.2.1]9.1. If the Current Activity is Defined Then (If the sequencing session has already begun, unconditionally terminate all active activities)",
    "194": "[NB.2.1]9.1.1. Exit Navigation Request Process (Navigation Request: Valid; Termination Request: Exit All; Sequencing Request: Exit; Target Activity: n/a; Exception: n/a)",
    "1666": "[NB.2.1]9.2. Else",
    "180": "[NB.2.1]9.2.1. Exit Navigation Request Process (Navigation Request: Not Valid; Sequencing Request: n/a; Termination Request: n/a; Target Activity: n/a; Exception: NB.2.1-2)",
    "1402": "[OP.1]1. Navigation Request = ",
    "755": "[OP.1]1.1. Apply the Navigation Request Process to the navigation request",
    "625": "[OP.1]1.2. If the Navigation Request Process returned navigation request Not Valid Then",
    "724": "[OP.1]1.2.1. Handle the navigation request exception Behavior not specified",
    "845": "[OP.1]1.2.2. Continue Loop - wait for the next navigation request",
    "368": "[OP.1]1.3. If there is a termination request Then (If the current activity is active, end the attempt on the current activity)",
    "706": "[OP.1]1.3.1. Apply the Termination Request Process to the termination request",
    "599": "[OP.1]1.3.2. If the Termination Request Process returned termination request Not Valid Then",
    "698": "[OP.1]1.3.2.1. Handle the termination request exception Behavior not specified",
    "821": "[OP.1]1.3.2.2. Continue Loop - wait for the next navigation request",
    "699": "[OP.1]1.3.3. If Termination Request Process returned a sequencing request Then",
    "39": "[OP.1]1.3.3.1. Replace any pending sequencing request by the sequencing request returned by the Termination Request Process (There can only be one pending sequencing request. Use the one returned by the termination request process, if it exists)",
    "1055": "[OP.1]1.4. If there is a sequencing request Then",
    "725": "[OP.1]1.4.1. Apply the Sequencing Request Process to the sequencing request",
    "608": "[OP.1]1.4.2. If the Sequencing Request Process returned sequencing request Not Valid Then",
    "707": "[OP.1]1.4.2.1. Handle the sequencing request exception Behavior not specified",
    "822": "[OP.1]1.4.2.2. Continue Loop - wait for the next navigation request",
    "534": "[OP.1]1.4.3. If the Sequencing Request Process returned a request to end the sequencing session Then",
    "76": "[OP.1]1.4.3.1. Exit Overall Sequencing Process - the sequencing session has terminated; return control to LTS (Exiting from the root of the activity tree ends the sequencing session; return control to the LTS)",
    "583": "[OP.1]1.4.4. If the Sequencing Request Process did not identify an activity for delivery Then",
    "823": "[OP.1]1.4.4.1. Continue Loop - wait for the next navigation request",
    "571": "[OP.1]1.4.5. Delivery request is for the activity identified by the Sequencing Request Process",
    "1097": "[OP.1]1.5. If there is a delivery request Then",
    "775": "[OP.1]1.5.1. Apply the Delivery Request Process to the delivery request",
    "629": "[OP.1]1.5.2. If the Delivery Request Process returned delivery request Not Valid Then",
    "726": "[OP.1]1.5.2.1. Handle the delivery request exception Behavior not specified",
    "824": "[OP.1]1.5.2.2. Continue Loop - wait for the next navigation request",
    "650": "[OP.1]1.5.3. Apply the Content Delivery Environment Process to the delivery request",
    "943": "[OP.1]2. End Loop - wait for the next navigation request",
    "767": "[OP.1]x. Navigation request is display message, exit sequencing process.",
    "689": "[OP.1]x. Navigation request is display message, translating to an exit request.",
    "812": "[OP.1]x. Navigation request is exit player, exit sequencing process.",
    "1037": "[OP.1]x. No API Runtime Nav Request, exit action=",
    "930": "[RB.1.1 b]1. Set the total weighted measure to Zero (0.0)",
    "1299": "[RB.1.1 b]2. Set valid data to False",
    "999": "[RB.1.1 b]3. Set the counted measures to Zero (0.0)",
    "1163": "[RB.1.1 b]4. For each child of the activity",
    "630": "[RB.1.1 b]4.1. If Tracked for the child is True Then (Only include tracked children.)",
    "259": "[RB.1.1 b]4.1.1. Increment counted measures by the adlcp:progressWeight for the child (The child is included, account for it in the weighted average)",
    "798": "[RB.1.1 b]4.1.2. If the Attempt Completion Amount Status is True Then",
    "90": "[RB.1.1 b]4.1.2.1. Add the product of Attempt Completion Amount multiplied by the adlcp:progressWeight to the total weighted measure (Only include progress that has been reported or previously rolled-up)",
    "1216": "[RB.1.1 b]4.1.2.2. Set valid data to True",
    "1235": "[RB.1.1 b]5. If valid data is False Then",
    "320": "[RB.1.1 b]5.1. Set the Attempt Completion Amount Status to False (No progress state rolled-up, cannot determine the rolled-up progress.)",
    "1614": "[RB.1.1 b]5.2. Else",
    "522": "[RB.1.1 b]5.2.1. If counted measures is greater than (>) Zero (0.0) Then (Set the rolled-up progress.)",
    "825": "[RB.1.1 b]5.2.1.1. Set the Attempt Completion Amount Status to True",
    "476": "[RB.1.1 b]5.2.1.2. Set the Attempt Completion Amount to the total weighted measure divided by counted measures",
    "1566": "[RB.1.1 b]5.2.2. Else ",
    "366": "[RB.1.1 b]5.2.2.1. Set the Attempt Completion Amount Status for the target objective to False (No children contributed weight.)",
    "1000": "[RB.1.1 b]6. Exit Completion Measure Rollup Process",
    "955": "[RB.1.1]1. Set the total weighted measure to Zero (0.0)",
    "1339": "[RB.1.1]2. Set valid date to False",
    "1038": "[RB.1.1]3. Set the counted measures to Zero (0.0)",
    "1056": "[RB.1.1]4. Set the target objective to Undefined",
    "912": "[RB.1.1]5. For each objective associated with the activity",
    "626": "[RB.1.1]5. Get the primary objective (For each objective associated with the activity)",
    "343": "[RB.1.1]5.1. If Objective Contributes to Rollup for the objective is True Then (Find the target objective for the rolled-up measure)",
    "944": "[RB.1.1]5.1.1. Set the target objective to the objective",
    "1098": "[RB.1.1]6. If target objective is Defined Then",
    "1164": "[RB.1.1]6.1. For each child of the activity",
    "555": "[RB.1.1]6.1.1. If Tracked for the child is True Then (Only include tracked children). Tracked = ",
    "978": "[RB.1.1]6.1.1.1. Set rolled-up objective to Undefined",
    "876": "[RB.1.1]6.1.1.2. For each objective associated with the child",
    "1165": "[RB.1.1]6.1.1.2. Get the primary objective.",
    "641": "[RB.1.1]6.1.1.2.1. If Objective Contributes to Rollup for the objective is True Then",
    "877": "[RB.1.1]6.1.1.2.1.1. Set rolled-up objective to the objective",
    "1403": "[RB.1.1]6.1.1.2.1.2. Break For",
    "956": "[RB.1.1]6.1.1.3. If rolled-up objective is Defined Then",
    "545": "[RB.1.1]6.1.1.3.1. Increment counted measures by the Rollup Objective Measure Weight for the child",
    "600": "[RB.1.1]6.1.1.3.2. If the Objective Measure Status for the rolled-up objective is True Then",
    "121": "[RB.1.1]6.1.1.3.2.1. Add the product of Objective Normalized Measure for the rolled-up objective multiplied by the Rollup Objective Measure Weight for the child to the total weighted measure",
    "826": "[RB.1.1]6.1.1.3.2.2. Set valid data to True - Normalized Measure = ",
    "1578": "[RB.1.1]6.1.1.4. Else",
    "495": "[RB.1.1]6.1.1.4.1. Exit Measure Rollup Process (One of the children does not include a rolled-up objective)",
    "1236": "[RB.1.1]6.2. If valid data is False Then",
    "103": "[RB.1.1]6.2.1. Set the Objective Measure Status for the target objective to False (No tracking state rolled-up, cannot determine the rolled-up measure. Total of all objectivemeasureweight values = ",
    "1667": "[RB.1.1]6.3. Else",
    "385": "[RB.1.1]6.3.1 If counted measures is greater than (>) Zero (0.0) Then (Set the rolled-up measure for the target objective.)",
    "678": "[RB.1.1]6.3.1. Set the Objective Measure Status for the target objective to True",
    "672": "[RB.1.1]6.3.1.1 Set the Objective Measure Status for the target objective to True",
    "477": "[RB.1.1]6.3.1.2. Set the Objective Normalized Measure for the target objective to the total weighted measure (",
    "1615": "[RB.1.1]6.3.2. Else",
    "487": "[RB.1.1]6.3.2. Set the Objective Normalized Measure for the target objective to the total weighted measure (",
    "453": "[RB.1.1]6.3.2.1 Set the Objective Measure Status for the target objective to False (No children contributed weight.)",
    "1190": "[RB.1.1]6.3.3. Exit Measure Rollup Process",
    "539": "[RB.1.1]7.Exit Measure Rollup Process No objective contributes to rollup, so we cannot set anything",
    "1024": "[RB.1.2 a]1. Set the target objective to Undefined",
    "888": "[RB.1.2 a]2. For each objective associated with the activity",
    "616": "[RB.1.2 a]2. Get the primary objective (For each objective associated with the activity)",
    "146": "[RB.1.2 a]2.1. If Objective Contributes to Rollup for the objective is True Then (Identify the objective that may be altered based on the activity's children's rolled up measure)",
    "913": "[RB.1.2 a]2.1.1. Set the target objective to the objective",
    "1486": "[RB.1.2 a]2.1.2. Break For",
    "1057": "[RB.1.2 a]3. If target objective is Defined Then",
    "127": "[RB.1.2 a]3.1. If Objective Satisfied by Measure for the target objective is True Then (If the objective is satisfied by measure, test the rolled-up measure against the defined threshold)",
    "303": "[RB.1.2 a]3.1.1. If the Objective Measure Status for the target objective is False Then (No Measure known, so objective status is unreliable)",
    "627": "[RB.1.2 a]3.1.1.1. Set the Objective Progress Status for the target objective to False",
    "1579": "[RB.1.2 a]3.1.2. Else",
    "130": "[RB.1.2 a]3.1.2.1. If Activity is Active for the activity is False Or (Activity is Active for the activity is True And adlseq:measureSatisfactionIfActive for the activity is True ) Then",
    "105": "[RB.1.2 a]3.1.2.1.1. If the Objective Normalized Measure for the target objective is greater than or equal (>=) to the Objective Minimum Satisfied Normalized Measure for the target objective Then",
    "609": "[RB.1.2 a]3.1.2.1.1.1. Set the Objective Progress Status for the target objective to True",
    "605": "[RB.1.2 a]3.1.2.1.1.2. Set the Objective Satisfied Status for the target objective to True",
    "1505": "[RB.1.2 a]3.1.2.1.2. Else",
    "610": "[RB.1.2 a]3.1.2.1.2.1. Set the Objective Progress Status for the target objective to True",
    "601": "[RB.1.2 a]3.1.2.1.2.2. Set the Objective Satisfied Status for the target objective to False",
    "1546": "[RB.1.2 a]3.1.2.2. Else",
    "270": "[RB.1.2 a]3.1.2.2.1. Set the Objective Progress Status for the target objective to False (Incomplete information, do not evaluate objective status)",
    "914": "[RB.1.2 a]3.2. Exit Objective Rollup Using Measure Process",
    "1668": "[RB.1.2 a]4. Else",
    "482": "[RB.1.2 a]4.1. Exit Objective Roll up Process (No objective contributes to rollup, so we cannot set anything)",
    "391": "[RB.1.2 a]4.1. Exit Objective Rollup Using Measure Process (No objective contributes to rollup, so we cannot set anything)",
    "23": "[RB.1.2 b]1. If the activity does not include Rollup Rules with the Not Satisfied  rollup action And the activity does not include Rollup Rules with the Satisfied  rollup action Then (If no objective rollup rules are defined, use the default rollup rules.)  ",
    "110": "[RB.1.2 b]1.1. Apply a Rollup Rule to the activity with a Rollup Child Activity Set of All; a Rollup Condition of Satisfied; and a Rollup Action of Satisfied (Define the default satisfied rule )",
    "69": "[RB.1.2 b]1.2. Apply a Rollup Rule to the activity with a Rollup Child Activity Set of All; a Rollup Condition of Objective Status Known; and a Rollup Action of Not Satisfied (Define the default not satisfied rule )",
    "1039": "[RB.1.2 b]1.Set the target objective to Undefined",
    "889": "[RB.1.2 b]2. For each objective associated with the activity",
    "617": "[RB.1.2 b]2. Get the primary objective (For each objective associated with the activity)",
    "148": "[RB.1.2 b]2.1. If Objective Contributes to Rollup for the objective is True Then (Identify the objective that may be altered based on the activity's children's rolled up status)",
    "915": "[RB.1.2 b]2.1.1. Set the target objective to the objective",
    "1487": "[RB.1.2 b]2.1.2. Break For",
    "1040": "[RB.1.2 b]2.Set the target objective to Undefined",
    "890": "[RB.1.2 b]3. For each objective associated with the activity",
    "618": "[RB.1.2 b]3. Get the primary objective (For each objective associated with the activity)",
    "1058": "[RB.1.2 b]3. If target objective is Defined Then",
    "294": "[RB.1.2 b]3.1. Apply the Rollup Rule Check Subprocess to the activity and the Not Satisfied rollup action Process all Not Satisfied rules first",
    "149": "[RB.1.2 b]3.1. If Objective Contributes to Rollup for the objective is True Then (Identify the objective that may be altered based on the activity's children's rolled up status)",
    "916": "[RB.1.2 b]3.1.1. Set the target objective to the objective",
    "1488": "[RB.1.2 b]3.1.2. Break For",
    "799": "[RB.1.2 b]3.2. If the Rollup Rule Check Subprocess returned True Then",
    "651": "[RB.1.2 b]3.2.1. Set the Objective Progress Status for the target objective to True",
    "631": "[RB.1.2 b]3.2.2. Set the Objective Satisfied Status for the target objective to False",
    "327": "[RB.1.2 b]3.3. Apply the Rollup Rule Check Subprocess to the activity and the Satisfied rollup action Process all Satisfied rules last",
    "800": "[RB.1.2 b]3.4. If the Rollup Rule Check Subprocess returned True Then",
    "652": "[RB.1.2 b]3.4.1. Set the Objective Progress Status for the target objective to True",
    "642": "[RB.1.2 b]3.4.2. Set the Objective Satisfied Status for the target objective to True",
    "945": "[RB.1.2 b]3.5. Exit Objective Rollup Using Rules Process",
    "1669": "[RB.1.2 b]4. Else",
    "1059": "[RB.1.2 b]4. If target objective is Defined Then",
    "295": "[RB.1.2 b]4.1. Apply the Rollup Rule Check Subprocess to the activity and the Not Satisfied rollup action Process all Not Satisfied rules first",
    "431": "[RB.1.2 b]4.1. Exit Objective Rollup Using Rules Process No objective contributes to rollup, so we cannot set anything",
    "801": "[RB.1.2 b]4.2. If the Rollup Rule Check Subprocess returned True Then",
    "653": "[RB.1.2 b]4.2.1. Set the Objective Progress Status for the target objective to True",
    "632": "[RB.1.2 b]4.2.2. Set the Objective Satisfied Status for the target objective to False",
    "328": "[RB.1.2 b]4.3. Apply the Rollup Rule Check Subprocess to the activity and the Satisfied rollup action Process all Satisfied rules last",
    "802": "[RB.1.2 b]4.4. If the Rollup Rule Check Subprocess returned True Then",
    "654": "[RB.1.2 b]4.4.1. Set the Objective Progress Status for the target objective to True",
    "643": "[RB.1.2 b]4.4.2. Set the Objective Satisfied Status for the target objective to True",
    "946": "[RB.1.2 b]4.5. Exit Objective Rollup Using Rules Process",
    "1670": "[RB.1.2 b]5. Else",
    "432": "[RB.1.2 b]5.1. Exit Objective Rollup Using Rules Process No objective contributes to rollup, so we cannot set anything",
    "1547": "[RB.1.2 c] satisfied = ",
    "1237": "[RB.1.2 c]0.5. If the activity is a leaf",
    "1248": "[RB.1.2 c]0.5.1 Exit, nothing to rollup",
    "1025": "[RB.1.2 c]1. Set the target objective to Undefined",
    "891": "[RB.1.2 c]2. For each objective associated with the activity",
    "619": "[RB.1.2 c]2. Get the primary objective (For each objective associated with the activity)",
    "147": "[RB.1.2 c]2.1. If Objective Contributes to Rollup for the objective is True Then (Identify the objective that may be altered based on the activity's children's rolled up measure)",
    "917": "[RB.1.2 c]2.1.1. Set the target objective to the objective",
    "1489": "[RB.1.2 c]2.1.2. Break For",
    "1081": "[RB.1.2 c]3. Get the set of applicable children",
    "1041": "[RB.1.2 c]4. initialize all not satisfied to true",
    "1117": "[RB.1.2 c]5. initialize all satisfied to true",
    "1271": "[RB.1.2 c]6. for each applicable child",
    "1354": "[RB.1.2 c]6.1 if child activity (",
    "1082": "[RB.1.2 c]6.1 satisfied = activity.getsatisfied",
    "1042": "[RB.1.2 c]6.1.1 satisfied = activity.getsatisfied",
    "1043": "[RB.1.2 c]6.1.2 attempted = activity.getattempted",
    "727": "[RB.1.2 c]6.1.3 not satisfied = (satisfied === false || attempted === true)",
    "892": "[RB.1.2 c]6.1.4 all statisfied = all satisfied AND satisfied",
    "776": "[RB.1.2 c]6.1.5 all not satisfied = all not satisfied AND not satisfied",
    "1083": "[RB.1.2 c]6.2 attempted = activity.getattempted",
    "756": "[RB.1.2 c]6.3 not satisfied = (satisfied === false || attempted === true)",
    "918": "[RB.1.2 c]6.4 all statisfied = all satisfied AND satisfied",
    "803": "[RB.1.2 c]6.5 all not satisfied = all not satisfied AND not satisfied",
    "1001": "[RB.1.2 c]7. If All Not Satified. (allNotSatisfied=",
    "673": "[RB.1.2 c]7.1. Set the Objective Progress Status for the target objective to True",
    "655": "[RB.1.2 c]7.2. Set the Objective Satisfied Status for the target objective to False",
    "1084": "[RB.1.2 c]7.3. If All Satisfied. (allSatisfied=",
    "656": "[RB.1.2 c]7.3.1. Set the Objective Progress Status for the target objective to True",
    "644": "[RB.1.2 c]7.3.2. Set the Objective Satisfied Status for the target objective to True",
    "1249": "[RB.1.2 c]Retrieving Status for child #",
    "1060": "[RB.1.2]1. Set the target objective to Undefined",
    "919": "[RB.1.2]2. For each objective associated with the activity",
    "628": "[RB.1.2]2. Get the primary objective (For each objective associated with the activity)",
    "154": "[RB.1.2]2.1. If Objective Contributes to Rollup for the objective is True Then (Identify the objective that may be altered based on the activity's children's rolled up measure)",
    "947": "[RB.1.2]2.1.1. Set the target objective to the objective",
    "1529": "[RB.1.2]2.1.2. Break For",
    "690": "[RB.1.2]3.1. If Objective Satisfied By Measure for the target objective is True",
    "866": "[RB.1.2]3.1.1 Invoke the Objective Rollup Process Using Measure",
    "1133": "[RB.1.2]3.1.2 Exit Objective Roll up Process",
    "1671": "[RB.1.2]3.2 Else ",
    "590": "[RB.1.2]3.2 If the Activity has rollup rules that have the action Satisfied or Not Satisfied",
    "496": "[RB.1.2]3.2.1 Apply Objective Rollup Using Rules Process (The default is included in the Rules process now)",
    "878": "[RB.1.2]3.2.1 Invoke the Objective Rollup Process Using Rules",
    "1134": "[RB.1.2]3.2.2 Exit Objective Roll up Process",
    "1191": "[RB.1.2]3.3 Exit Objective Roll up Process",
    "386": "[RB.1.2]3.3 Invoke the Objective Rollup Process Using Default - Neither Sub Process is Applicable, so use the Default Rules",
    "1192": "[RB.1.2]3.4 Exit Objective Roll up Process",
    "1085": "[RB.1.3 a]1. If activity is not tracked, return",
    "1272": "[RB.1.3 a]1. If the activity is a leaf",
    "1289": "[RB.1.3 a]1.1 Exit, nothing to rollup",
    "1086": "[RB.1.3 a]2. Get the set of applicable children",
    "1044": "[RB.1.3 a]2. Set Attempt Progress Status to False",
    "986": "[RB.1.3 a]3.  Set Attempt Completion Status to False",
    "1099": "[RB.1.3 a]3. initialize all incomplete to true",
    "134": "[RB.1.3 a]4. If adlcp:completedbyMeasure for the target objective is True Then (If the completion is determined by measure, test the rolled-up progress against the defined threshold.)",
    "1217": "[RB.1.3 a]4. initialize completed to true",
    "371": "[RB.1.3 a]4.1. If the Attempt Completion Amount Status is False Then (No progress amount known, so the status is unreliable.)",
    "900": "[RB.1.3 a]4.1.1. Set the Attempt Completion Status to False",
    "1616": "[RB.1.3 a]4.2. Else",
    "444": "[RB.1.3 a]4.2.1. If the Attempt Completion Amount is greater than or equal (>=) to the adlcp:minProgressMeasure  Then",
    "931": "[RB.1.3 a]4.2.1.1. Set the Attempt Progress Status True  ",
    "872": "[RB.1.3 a]4.2.1.2. Set the Attempt Completion Status to True  ",
    "1567": "[RB.1.3 a]4.2.2. Else ",
    "957": "[RB.1.3 a]4.2.2.1. Set the Attempt Progress Status True",
    "879": "[RB.1.3 a]4.2.2.2. Set the Attempt Completion Status to False",
    "1672": "[RB.1.3 a]5. Else",
    "1273": "[RB.1.3 a]5. for each applicable child",
    "1355": "[RB.1.3 a]5.1 if child activity (",
    "461": "[RB.1.3 a]5.1. Set the Attempt Progress Status False (Incomplete information, do not evaluate completion status.) ",
    "1045": "[RB.1.3 a]5.1.1 completed = activity.getcompleted",
    "1046": "[RB.1.3 a]5.1.2 attempted = activity.getattempted",
    "768": "[RB.1.3 a]5.1.3 incomplete = (completed === false || attempted === true)",
    "880": "[RB.1.3 a]5.1.4. Child should be included in completed rollup",
    "881": "[RB.1.3 a]5.1.4.1 all completed = all completed AND completed",
    "873": "[RB.1.3 a]5.1.5. Child should be included in incomplete rollup",
    "846": "[RB.1.3 a]5.1.5.1. all incomplete = all incomplete AND incomplete",
    "858": "[RB.1.3 a]6. Exit Activity Progress Rollup Using Measure Process",
    "1404": "[RB.1.3 a]6. If All Incomplete",
    "777": "[RB.1.3 a]6.1. Set the Attempt Progress Status for the activity to True",
    "745": "[RB.1.3 a]6.2. Set the Attempt Completion Status for the activity to False",
    "1425": "[RB.1.3 a]7. If All Satisfied",
    "778": "[RB.1.3 a]7.1. Set the Attempt Progress Status for the activity to True",
    "757": "[RB.1.3 a]7.2. Set the Attempt Completion Status for the activity to True",
    "31": "[RB.1.3 b]1. If the activity does not include Rollup Rules with the Incomplete rollup action And the activity does not include Rollup Rules with the Completed  rollup action Then (If no progress rollup rules are defined, use the default rollup rules.) ",
    "111": "[RB.1.3 b]1.1. Apply a Rollup Rule to the activity with a Rollup Child Activity Set of All; a Rollup Condition of Completed; and a Rollup Action of Completed (Define the default completed rule)",
    "70": "[RB.1.3 b]1.2. Apply a Rollup Rule to the activity with a Rollup Child Activity Set of All; a Rollup Condition of Activity Progress Known; and a Rollup Action of Incomplete (Define the default not incomplete rule)",
    "314": "[RB.1.3 b]2. Apply the Rollup Rule Check Subprocess to the activity and the Incomplete rollup action (Process all Incomplete rules first.)",
    "804": "[RB.1.3 b]3. If the Rollup Rule Check Subprocess returned True Then  ",
    "758": "[RB.1.3 b]3.1. Set the Attempt Progress Status for the activity to True  ",
    "719": "[RB.1.3 b]3.2. Set the Attempt Completion Status for the activity to False  ",
    "321": "[RB.1.3 b]4. Apply the Rollup Rule Check Subprocess to the activity and the Completed rollup action (Process all Completed rules last.) ",
    "827": "[RB.1.3 b]5. If the Rollup Rule Check Subprocess returned True Then",
    "759": "[RB.1.3 b]5.1. Set the Attempt Progress Status for the activity to True  ",
    "728": "[RB.1.3 b]5.2. Set the Attempt Completion Status for the activity to True  ",
    "1026": "[RB.1.3 b]6. Exit Activity Progress Rollup Process",
    "336": "[RB.1.3]1. Apply the Rollup Rule Check Subprocess to the activity and the Incomplete rollup action Process all Incomplete rules first",
    "91": "[RB.1.3]1. Using Measure:  If the activity has Completed by Measure equal to True, then the rolled-up progress measure is compared against the Minimum Progress Measure and Measure Satisfaction if Active:",
    "847": "[RB.1.3]1.1 Apply Activity Progress Rollup Using Measure Process ",
    "1700": "[RB.1.3]2. Else",
    "848": "[RB.1.3]2. If the Rollup Rule Check Subprocess returned True Then",
    "849": "[RB.1.3]2.1. Apply Activity Progress Rollup Using Measure Process",
    "805": "[RB.1.3]2.1. Set the Attempt Progress Status for the activity to True",
    "769": "[RB.1.3]2.2. Set the Attempt Completion Status for the activity to False",
    "350": "[RB.1.3]3. Apply the Rollup Rule Check Subprocess to the activity and the Completed rollup action Process all Completed rules last.",
    "1061": "[RB.1.3]3. Exit Activity Progress Rollup Process",
    "850": "[RB.1.3]4. If the Rollup Rule Check Subprocess returned True Then",
    "806": "[RB.1.3]4.1. Set the Attempt Progress Status for the activity to True",
    "779": "[RB.1.3]4.2. Set the Attempt Completion Status for the activity to True",
    "1166": "[RB.1.3]4.5. Rolling up using Default Rules",
    "1062": "[RB.1.3]5. Exit Activity Progress Rollup Process",
    "387": "[RB.1.4.1]1.Initialize rollup condition bag as an Empty collection (This is used track of the evaluation rule's conditions)",
    "790": "[RB.1.4.1]2. For each Rollup Condition in the set of Rollup Conditions",
    "36": "[RB.1.4.1]2.1. Evaluate the rollup condition by applying the appropriate tracking information for the activity to the Rollup Condition. (Evaluate each condition against the activity's tracking information. This evaluation may result in 'unknown'.)",
    "369": "[RB.1.4.1]2.2. If the Rollup Condition Operator for the Rollup Condition is Not Then (Negating 'unknown' results in 'unknown')",
    "1135": "[RB.1.4.1]2.2.1. Negate the rollup condition",
    "967": "[RB.1.4.1]2.3. Add the value of the rollup condition (",
    "308": "[RB.1.4.1]3. If the rollup condition bag is Empty Then (If there are no defined conditions for the rule, cannot determine the rule applies)",
    "691": "[RB.1.4.1]3.1. Exit Evaluate Rollup Conditions Subprocess (Evaluation: Unknown)",
    "1100": "[RB.1.4.1]4. Apply the Condition Combination (",
    "497": "[RB.1.4.1]5. Exit Evaluate Rollup Conditions Subprocess (Evaluation: the value of combined rule evaluation)",
    "1373": "[RB.1.4.2] Set included to False",
    "1340": "[RB.1.4.2]1. Set included to False",
    "813": "[RB.1.4.2]2. If the Rollup Action is Satisfied Or Not Satisfied Then",
    "406": "[RB.1.4.2]2.1. If the Rollup Objective Satisfied value for the activity is True Then (Test the objective rollup control)",
    "591": "[RB.1.4.2]2.1.1. Set included to True (Default Behavior \u2013 adlseq:requiredFor[xxx] == always)",
    "97": "[RB.1.4.2]2.1.2. If (the Rollup Action is Satisfied And adlseq:requiredForSatisfied is ifNotSuspended) Or (the Rollup Action is Not Satisfied And adlseq:requiredForNotSatisfied is ifNotSuspended) Then",
    "92": "[RB.1.4.2]2.1.2.1. If  Activity Progress Status for the activity is False Or (Activity Attempt Count for the activity is greater than (>) Zero (0) And Activity is Suspended for the activity is True) Then",
    "278": "[RB.1.4.2]2.1.2.1. If Activity Attempt Count for the activity is greater than (>) Zero (0) And Activity is Suspended for the activity is True Then",
    "1193": "[RB.1.4.2]2.1.2.1.1. Set included to False",
    "1580": "[RB.1.4.2]2.1.3. Else",
    "104": "[RB.1.4.2]2.1.3.1. If (the Rollup Action is Satisfied And adlseq:requiredForSatisfied is ifAttempted) Or (the Rollup Action is Not Satisfied And adlseq:requiredForNotSatisfied is ifAttempted) Then",
    "679": "[RB.1.4.2]2.1.3.1.1. If Activity Attempt Count for the activity is Zero (0) Then",
    "329": "[RB.1.4.2]2.1.3.1.1. If Activity Progress Status for the activity is False Or Activity Attempt Count for the activity is Zero (0) Then",
    "1136": "[RB.1.4.2]2.1.3.1.1.1. Set included to False",
    "1548": "[RB.1.4.2]2.1.3.2. Else",
    "98": "[RB.1.4.2]2.1.3.2.1. If (the Rollup Action is Satisfied And adlseq:requiredForSatisfied is ifNotSkipped) Or (the Rollup Action is Not Satisfied And adlseq:requiredForNotSatisfied is ifNotSkipped) Then",
    "467": "[RB.1.4.2]2.1.3.2.1.1. Apply the Sequencing Rules Check Process to the activity and its Skipped sequencing rules",
    "633": "[RB.1.4.2]2.1.3.2.1.2. If the Sequencing Rules Check Process does not return Nil Then",
    "1101": "[RB.1.4.2]2.1.3.2.1.2.1. Set included to False",
    "851": "[RB.1.4.2]3. If the Rollup Action is Completed Or Incomplete Then",
    "419": "[RB.1.4.2]3.1. If the Rollup Progress Completion value for the activity is True Then (Test the progress rollup control)",
    "592": "[RB.1.4.2]3.1.1. Set included to True (Default Behavior \u2013 adlseq:requiredFor[xxx] == always)",
    "106": "[RB.1.4.2]3.1.2. If (the Rollup Action is Completed And adlseq:requiredForCompleted is ifNotSuspended) Or (the Rollup Action is Incomplete And adlseq:requiredForIncomplete is ifNotSuspended) Then",
    "279": "[RB.1.4.2]3.1.2.1. If Activity Attempt Count for the activity is greater than (>) Zero (0) And Activity is Suspended for the activity is True Then",
    "93": "[RB.1.4.2]3.1.2.1. If Activity Progress Status for the activity is False Or (Activity Attempt Count for the activity is greater than (>) Zero (0) And Activity is Suspended for the activity is True) Then",
    "1581": "[RB.1.4.2]3.1.3. Else",
    "117": "[RB.1.4.2]3.1.3.1. If (the Rollup Action is Completed And adlseq:requiredForCompleted is ifAttempted) Or (the Rollup Action is Incomplete And adlseq:requiredForIncomplete is ifAttempted) Then",
    "680": "[RB.1.4.2]3.1.3.1.1. If Activity Attempt Count for the activity is Zero (0) Then",
    "330": "[RB.1.4.2]3.1.3.1.1. If Activity Progress Status for the activity is False Or Activity Attempt Count for the activity is Zero (0) Then",
    "1137": "[RB.1.4.2]3.1.3.1.1.1. Set included to False",
    "1549": "[RB.1.4.2]3.1.3.2. Else",
    "107": "[RB.1.4.2]3.1.3.2.1. If (the Rollup Action is Completed And adlseq:requiredForCompleted is ifNotSkipped) Or (the Rollup Action is Incomplete And adlseq:requiredForIncomplete is ifNotSkipped) Then",
    "468": "[RB.1.4.2]3.1.3.2.1.1. Apply the Sequencing Rules Check Process to the activity and its Skipped sequencing rules",
    "634": "[RB.1.4.2]3.1.3.2.1.2. If the Sequencing Rules Check Process does not return Nil Then",
    "1102": "[RB.1.4.2]3.1.3.2.1.2.1. Set included to False",
    "602": "[RB.1.4.2]4. Exit Check Child for Rollup Subprocess (Child is Included in Rollup: included)",
    "260": "[RB.1.4] 1.2.10.1.Exit RollupRule Check Subprocess (Evaluation: True) (Stop at the first rule that evaluates to true - perform the associated action)",
    "265": "[RB.1.4] 1.2.9.1.Exit RollupRule Check Subprocess (Evaluation: True) (Stop at the first rule that evaluates to true - perform the associated action)",
    "331": "[RB.1.4]1. If the activity includes Rollup Rules with the specified Rollup Action Then  (Make sure the activity has rules to evaluate)",
    "214": "[RB.1.4]1.1. Initialize rules list by selecting the set of Rollup Rules for the activity that have the specified Rollup Actions, maintaining original rule ordering",
    "1138": "[RB.1.4]1.2. For each rule in the rules list",
    "1356": "[RB.1.4]1.2.0. Rule Description: ",
    "746": "[RB.1.4]1.2.1. Initialize contributing children bag as an empty collection",
    "1118": "[RB.1.4]1.2.10. If status change is True Then",
    "1119": "[RB.1.4]1.2.2. For each child of the activity",
    "968": "[RB.1.4]1.2.2.1. If Tracked for the child is True Then",
    "236": "[RB.1.4]1.2.2.2.1. Apply Check Child for Rollup Subprocess to the child and the Rollup Action (Make sure this child contributes to the status of its parent)",
    "747": "[RB.1.4]1.2.2.2.2. If Check Child for Rollup Subprocess returned True Then",
    "156": "[RB.1.4]1.2.2.2.2.1. Apply the Evaluate Rollup Conditions Subprocess to the child and the Rollup Conditions for the rule (Evaluate the rollup conditions on the child activity)",
    "309": "[RB.1.4]1.2.2.2.2.2. If Evaluate Rollup Conditions Subprocess returned Unknown Then (Account for a possible 'unknown' condition evaluation)",
    "720": "[RB.1.4]1.2.2.2.2.2.1. Add an Unknown value to the contributing children bag",
    "1506": "[RB.1.4]1.2.2.2.2.3. Else",
    "681": "[RB.1.4]1.2.2.2.2.4. If Evaluate Rollup Conditions Subprocess returned True Then",
    "770": "[RB.1.4]1.2.2.2.2.4.1. Add a True value to the contributing children bag",
    "1507": "[RB.1.4]1.2.2.2.2.5. Else",
    "760": "[RB.1.4]1.2.2.2.2.5.1. Add a False value to the contributing children bag",
    "189": "[RB.1.4]1.2.3. Initialize status change to False (Determine if the appropriate children contributed to rollup; if they did, the status of the activity should be changed.)",
    "932": "[RB.1.4]1.2.4. Case: the Rollup Child Activity Set is All",
    "901": "[RB.1.4]1.2.4. Case: the contributing children bag is empty",
    "550": "[RB.1.4]1.2.4.1. Break  (No action; do not change status unless some child contributed to rollup)",
    "540": "[RB.1.4]1.2.4.1. If the contributing children bag does not contain a value of False Or Unknown Then",
    "1139": "[RB.1.4]1.2.4.1.1. Set status change to True",
    "933": "[RB.1.4]1.2.5. Case: the Rollup Child Activity Set is All",
    "934": "[RB.1.4]1.2.5. Case: the Rollup Child Activity Set is Any",
    "692": "[RB.1.4]1.2.5.1. If the contributing children bag contains a value of True Then",
    "541": "[RB.1.4]1.2.5.1. If the contributing children bag does not contain a value of False Or Unknown Then",
    "1140": "[RB.1.4]1.2.5.1.1. Set status change to True",
    "935": "[RB.1.4]1.2.6. Case: the Rollup Child Activity Set is Any",
    "920": "[RB.1.4]1.2.6. Case: the Rollup Child Activity Set is None",
    "693": "[RB.1.4]1.2.6.1. If the contributing children bag contains a value of True Then",
    "546": "[RB.1.4]1.2.6.1. If the contributing children bag does not contain a value of True Or Unknown Then",
    "1141": "[RB.1.4]1.2.6.1.1. Set status change to True",
    "814": "[RB.1.4]1.2.7. Case: the Rollup Child Activity Set is At Least Count",
    "921": "[RB.1.4]1.2.7. Case: the Rollup Child Activity Set is None",
    "547": "[RB.1.4]1.2.7.1. If the contributing children bag does not contain a value of True Or Unknown Then",
    "271": "[RB.1.4]1.2.7.1. If the count of True values contained in the contributing children bag equals or exceeds the Rollup Minimum Count of the rule Then",
    "1142": "[RB.1.4]1.2.7.1.1. Set status change to True",
    "815": "[RB.1.4]1.2.8. Case: the Rollup Child Activity Set is At Least Count",
    "791": "[RB.1.4]1.2.8. Case: the Rollup Child Activity Set is At Least Percent",
    "272": "[RB.1.4]1.2.8.1. If the count of True values contained in the contributing children bag equals or exceeds the Rollup Minimum Count of the rule Then",
    "118": "[RB.1.4]1.2.8.1. If the percentage (normalized between 0..1, inclusive) of True values contained in the contributing children bag equals or exceeds the Rollup Minimum Percent of the rule Then",
    "1143": "[RB.1.4]1.2.8.1.1. Set status change to True",
    "792": "[RB.1.4]1.2.9. Case: the Rollup Child Activity Set is At Least Percent",
    "1144": "[RB.1.4]1.2.9. If status change is True Then",
    "119": "[RB.1.4]1.2.9.1. If the percentage (normalized between 0..1, inclusive) of True values contained in the contributing children bag equals or exceeds the Rollup Minimum Percent of the rule Then",
    "1145": "[RB.1.4]1.2.9.1.1. Set status change to True",
    "420": "[RB.1.4]2. Exit Rollup Rule Check Subprocess (Evaluation: False) No rules evaluated to true - do not perform any action",
    "867": "[RB.1.5] Adding activity to collection of rolled up activities.",
    "902": "[RB.1.5] No tracking data changed, stopping further rollup.",
    "256": "[RB.1.5]1. Form the activity path as the ordered series of activities from the root of the activity tree to the activity, inclusive, in reverse order.",
    "1120": "[RB.1.5]2. If the activity path is Empty Then",
    "893": "[RB.1.5]2.1. Exit Overall Rollup Process - Nothing to rollup",
    "1047": "[RB.1.5]3. For each activity in the activity path",
    "551": "[RB.1.5]3.1. If the activity has children Then (Only apply Measure Rollup to non-leaf activities)",
    "564": "[RB.1.5]3.1.1. Apply the Measure Rollup Process to the activity (Rollup the activity's measure)",
    "454": "[RB.1.5]3.1.2. Apply the Completion Measure Rollup Process to the activity (Rollup the activity\u2019s progress measure.)",
    "729": "[RB.1.5]3.2. Apply the appropriate Objective Rollup Process to the activity",
    "115": "[RB.1.5]3.2. Apply the appropriate Objective Rollup Process to the activity (Apply the appropriate behavior described in section RB.1.2, based on the activity's defined sequencing information)",
    "780": "[RB.1.5]3.3. Apply the Activity Progress Rollup Process to the activity",
    "126": "[RB.1.5]3.3. Apply the Activity Progress Rollup Process to the activity (Apply the appropriate behavior described in section RB.1.3, based on the activity's defined sequencing information)",
    "261": "[RB.1.5]3.3. Apply the appropriate Activity Progress Rollup Process to the activity (R.S.:Apply the Activity Progress Rollup Process to the activity)",
    "1274": "[RB.1.5]4. Exit Overall Rollup Process",
    "488": "[SB.2.10]1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "433": "[SB.2.10]1.1. Exit Retry Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.10-1) (Nothing to deliver)",
    "101": "[SB.2.10]2. If the Activity is Active for the Current Activity is True Or the Activity is Suspended for the Current Activity is True Then (Cannot retry an activity that is still active or suspended)",
    "434": "[SB.2.10]2.1. Exit Retry Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.10-2) (Nothing to deliver)",
    "969": "[SB.2.10]3. If the Current Activity is not a leaf Then",
    "372": "[SB.2.10]3.1. Apply the Flow Subprocess to the Current Activity in the Forward direction with consider children equal to True",
    "948": "[SB.2.10]3.2. If the Flow Subprocess returned False Then",
    "407": "[SB.2.10]3.2.1. Exit Retry Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.10-3) (Nothing to deliver)",
    "1640": "[SB.2.10]3.3. Else",
    "322": "[SB.2.10]3.3.1. Exit Retry Sequencing Request Process (Delivery Request: the activity identified by the Flow Subprocess; Exception: n/a)",
    "511": "[SB.2.10]3.a. (step not in pseudo code) Reset activity data for the re-tried activity and its children (",
    "828": "[SB.2.10]3.a.1 If objectives global to system is false (obj global=",
    "1194": "[SB.2.10]3.a.2 Reset any global objectives",
    "1687": "[SB.2.10]4. Else",
    "489": "[SB.2.10]4.1. Exit Retry Sequencing Request Process (Delivery Request: the Current Activity; Exception: n/a)",
    "490": "[SB.2.11]1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "512": "[SB.2.11]1.1. Exit Exit Sequencing Request Process (End Sequencing Session: False; Exception: SB.2.11-1)",
    "323": "[SB.2.11]2. If the Activity is Active for the Current Activity is True Then (Make sure the current activity has already been terminated)",
    "513": "[SB.2.11]2.1. Exit Exit Sequencing Request Process (End Sequencing Session: False; Exception: SB.2.11-2)",
    "761": "[SB.2.11]3. If the Current Activity is the root of the activity tree Then",
    "219": "[SB.2.11]3.1. Exit Exit Sequencing Request Process (End Sequencing Session: True; Exception: n/a) (The sequencing session has ended, return control to the LTS)",
    "556": "[SB.2.11]4. Exit Exit Sequencing Request Process (End Sequencing Session: False; Exception: n/a)",
    "1121": "[SB.2.12]1. Case: sequencing request is Start",
    "949": "[SB.2.12]1.1. Apply the Start Sequencing Request Process",
    "694": "[SB.2.12]1.2. If the Start Sequencing Request Process returns an exception Then",
    "81": "[SB.2.12]1.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Start Sequencing Request Process)",
    "1641": "[SB.2.12]1.3. Else",
    "42": "[SB.2.12]1.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Start Sequencing Request Process; End Sequencing Session: as identified by the Start Sequencing Request Process; Exception: n/a)",
    "122": "[SB.2.12]1.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Start Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "1027": "[SB.2.12]2. Case: sequencing request is Resume All",
    "882": "[SB.2.12]2.1. Apply the Resume All Sequencing Request Process",
    "645": "[SB.2.12]2.2. If the Resume All Sequencing Request Process returns an exception Then",
    "71": "[SB.2.12]2.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Resume All Sequencing Request Process)",
    "1642": "[SB.2.12]2.3. Else",
    "108": "[SB.2.12]2.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Resume All Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "1146": "[SB.2.12]3. Case: sequencing request is Exit",
    "958": "[SB.2.12]3.1. Apply the Exit Sequencing Request Process",
    "700": "[SB.2.12]3.2. If the Exit Sequencing Request Process returns an exception Then",
    "83": "[SB.2.12]3.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Exit Sequencing Request Process)",
    "1643": "[SB.2.12]3.3. Else",
    "125": "[SB.2.12]3.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: n/a; End Sequencing Session: the result of the Exit Sequencing Request Process; Exception: n/a)",
    "1122": "[SB.2.12]4. Case: sequencing request is Retry",
    "950": "[SB.2.12]4.1. Apply the Retry Sequencing Request Process",
    "82": "[SB.2.12]4.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Retry Sequencing Request Process)",
    "1644": "[SB.2.12]4.3. Else",
    "116": "[SB.2.12]4.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Retry Sequencing Request Process; End Sequencing Session: n/a) ; Exception: n/a)",
    "1063": "[SB.2.12]5. Case: sequencing request is Continue",
    "903": "[SB.2.12]5.1. Apply the Continue Sequencing Request Process",
    "660": "[SB.2.12]5.2. If the Continue Sequencing Request Process returns an exception Then",
    "27": "[SB.2.12]5.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: Value from Continue Sequencing Request Process; Exception: the exception identified by the Continue Sequencing Request Process)",
    "72": "[SB.2.12]5.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Continue Sequencing Request Process)",
    "1645": "[SB.2.12]5.3. Else",
    "37": "[SB.2.12]5.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Continue Sequencing Request Process; End Sequencing Session: as identified by the Continue Sequencing Request Process;; Exception: n/a)",
    "112": "[SB.2.12]5.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Continue Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "1064": "[SB.2.12]6. Case: sequencing request is Previous",
    "904": "[SB.2.12]6.1. Apply the Previous Sequencing Request Process",
    "661": "[SB.2.12]6.2. If the Previous Sequencing Request Process returns an exception Then",
    "73": "[SB.2.12]6.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Previous Sequencing Request Process)",
    "1646": "[SB.2.12]6.3. Else",
    "113": "[SB.2.12]6.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Previous Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "1103": "[SB.2.12]7. Case: sequencing request is Choice",
    "936": "[SB.2.12]7.1. Apply the Choice Sequencing Request Process",
    "682": "[SB.2.12]7.2. If the Choice Sequencing Request Process returns an exception Then",
    "77": "[SB.2.12]7.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Choice Sequencing Request Process)",
    "1647": "[SB.2.12]7.3. Else",
    "120": "[SB.2.12]7.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request: the result of the Choice Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "1147": "[SB.2.12]8. Case: sequencing request is Jump",
    "959": "[SB.2.12]8.1. Apply the Jump Sequencing Request Process",
    "701": "[SB.2.12]8.2. If the Jump Sequencing Request Process returns an exception Then",
    "84": "[SB.2.12]8.2.1. Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: the exception identified by the Jump Sequencing Request Process)",
    "1648": "[SB.2.12]8.3. Else",
    "123": "[SB.2.12]8.3.1. Exit Sequencing Request Process (Sequencing Request: Valid; Delivery Request:  the result of the Jump Sequencing Request Process; End Sequencing Session: n/a; Exception: n/a)",
    "150": "[SB.2.12]8.Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: SB.2.12-1) (Invalid sequencing request)",
    "151": "[SB.2.12]9.Exit Sequencing Request Process (Sequencing Request: Not Valid; Delivery Request: n/a; End Sequencing Session: n/a; Exception: SB.2.12-1) (Invalid sequencing request)",
    "483": "[SB.2.13]1. If the Current Activity is not Defined Then (Make sure the sequencing session has already begun.)",
    "435": "[SB.2.13]1.1. Exit Jump Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.13-1) (Nothing to deliver.)",
    "351": "[SB.2.13]2. Exit Jump Sequencing Request Process (Delivery Request: the activity identified by the target activity; Exception: n/a)",
    "1195": "[SB.2.1]1. Set reversed direction to False",
    "24": "[SB.2.1]2. If (previous traversal direction is Defined And is Backward) And the activity is the last activity in the activity's parent's list of Available Children Then (Test if we have skipped all of the children in a forward only cluster moving backward)",
    "1148": "[SB.2.1]2.1. traversal direction is Backward",
    "552": "[SB.2.1]2.2. activity is the first activity in the activity's parent's list of Available Children",
    "1167": "[SB.2.1]2.3. Set reversed direction to True",
    "979": "[SB.2.1]3. If the traversal direction is Forward Then",
    "266": "[SB.2.1]3.1. If the activity is the last activity in a forward preorder tree traversal of the activity tree Then (Cannot walk off the activity tree)",
    "20": "[SB.2.1]3.1. If the activity is the last available activity in a forward preorder tree traversal of the activity tree Or (the activity is the Root of the Activity Tree And consider children is False) Then (Walking off the tree causes the sequencing session to end)",
    "572": "[SB.2.1]3.1.1. Apply the Terminate Descendent Attempt Process to the root of the activity tree",
    "436": "[SB.2.1]3.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Traversal Direction: n/a; Exception: SB.2.1-1)",
    "174": "[SB.2.1]3.1.2. Exit Flow Tree Traversal Subprocess (Next Activity: n/a; End Sequencing Session: True; Exception: n/a) - Continuing past the last activity, exiting the course",
    "762": "[SB.2.1]3.2. If the activity is a leaf Or consider children is False Then",
    "478": "[SB.2.1]3.2.1. If the activity is the last activity in the activity's parent's list of Available Children Then",
    "28": "[SB.2.1]3.2.1.1. Apply the Flow Tree Traversal Subprocess to the activity's parent in the Forward direction and a previous traversal direction of n/a with consider children equal to False (Recursion - Move to the activity's parent's next forward sibling)",
    "225": "[SB.2.1]3.2.1.2. Exit Flow Tree Traversal Subprocess (Return the results of the recursive Flow Tree Traversal Subprocess) (Return the result of the recursion)",
    "1617": "[SB.2.1]3.2.2. Else",
    "298": "[SB.2.1]3.2.2.1. Traverse the tree, forward preorder, one activity to the next activity, in the activity's parent's list of Available Children",
    "201": "[SB.2.1]3.2.2.2.Exit Flow Tree Traversal Subprocess (Next Activity: the activity identified by the traversal; Traversal Direction: traversal direction; Exception: n/a)",
    "1149": "[SB.2.1]3.3. Else Entering a cluster Forward",
    "392": "[SB.2.1]3.3.1. If the activity's list of Available Children is Not Empty Then Make sure this activity has a child activity",
    "332": "[SB.2.1]3.3.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: the first activity in the activity's list of Available Children (",
    "1618": "[SB.2.1]3.3.2. Else",
    "421": "[SB.2.1]3.3.2.1. Exit Flow Tree Traversal Subprocess (Next Activity Nil; Traversal Direction: n/a; Exception: SB.2.1-2)",
    "970": "[SB.2.1]4. If the traversal direction is Backward Then",
    "437": "[SB.2.1]4.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Traversal Direction: n/a; Exception: SB.2.1-3)",
    "465": "[SB.2.1]4.1.If the activity is the root activity of the tree Then (Cannot walk off the root of the activity tree)",
    "763": "[SB.2.1]4.2. If the activity is a leaf Or consider children is False Then",
    "337": "[SB.2.1]4.2.1. If reversed direction is False Then (Only test 'forward only' if we are not going to leave this forward only cluster.)",
    "317": "[SB.2.1]4.2.1.1. If Sequencing Control Forward Only for the parent of the activity is True Then (Test the control mode before traversing)",
    "393": "[SB.2.1]4.2.1.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Traversal Direction: n/a; Exception: SB.2.1-4)",
    "471": "[SB.2.1]4.2.2. If the activity is the first activity in the activity's parent's list of Available Children Then",
    "25": "[SB.2.1]4.2.2.1. Apply the Flow Tree Traversal Subprocess to the activity's parent in the Backward direction and a previous traversal direction of n/a with consider children equal to False (Recursion - Move to the activity's parent's next backward sibling)",
    "226": "[SB.2.1]4.2.2.2. Exit Flow Tree Traversal Subprocess (Return the results of the recursive Flow Tree Traversal Subprocess) (Return the result of the recursion)",
    "1619": "[SB.2.1]4.2.3. Else",
    "267": "[SB.2.1]4.2.3.1. Traverse the tree, reverse preorder, one activity to the previous activity, from the activity's parent's list of Available Children",
    "807": "[SB.2.1]4.2.3.2. Exit Flow Tree Traversal Subprocess (Next Activity: ",
    "1087": "[SB.2.1]4.3. Else (Entering a cluster Backward)",
    "376": "[SB.2.1]4.3.1. If the activity's list of Available Children is Not Empty Then (Make sure this activity has a child activity)",
    "49": "[SB.2.1]4.3.1.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: the first activity in the activity's list of Available Children; Traversal Direction: Forward; Exception: n/a) (Start at the beginning of a forward only cluster)",
    "1582": "[SB.2.1]4.3.1.2. Else",
    "43": "[SB.2.1]4.3.1.2.1. Exit Flow Tree Traversal Subprocess (Next Activity: the last activity in the activity's list of Available Children; Traversal Direction: Backward; Exception: n/a) Start at the end of the cluster if we are backing into it",
    "1620": "[SB.2.1]4.3.2. Else",
    "408": "[SB.2.1]4.3.2.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Traversal Direction: n/a; Exception: SB.2.1-2)",
    "458": "[SB.2.2]1. If Sequencing Control Flow for the parent of the activity is False Then (Confirm that 'flow' is enabled)",
    "388": "[SB.2.2]1.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity; Exception: SB.2.2-1)",
    "535": "[SB.2.2]2. Apply the Sequencing Rules Check Process to the activity and its Skipped sequencing rules",
    "358": "[SB.2.2]3. If the Sequencing Rules Check Process does not return Nil Then (Activity is skipped, try to go to the 'next' activity)",
    "185": "[SB.2.2]3.1. Apply the Flow Tree Traversal Subprocess to the activity in the traversal direction and the previous traversal direction with consider children equal to False",
    "635": "[SB.2.2]3.2. If the Flow Tree Traversal Subprocess does not identify an activity Then",
    "157": "[SB.2.2]3.2.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity; Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "32": "[SB.2.2]3.2.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity;End Sequencing Session: as identified by the Flow Tree Traversal Subprocess;  Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "1673": "[SB.2.2]3.3. Else",
    "67": "[SB.2.2]3.3.1. If the previous traversal direction is Backward And the Traversal Direction returned by the Flow Tree Traversal Subprocess is Backward Then (Make sure the recursive call considers the correct direction)",
    "35": "[SB.2.2]3.3.1.1. Apply the Flow Activity Traversal Subprocess to the activity identified by the Flow Tree Traversal Subprocess in the traversal direction and a previous traversal direction of n/a (Recursive call \u2013 make sure the 'next' activity is OK)",
    "1621": "[SB.2.2]3.3.2. Else",
    "9": "[SB.2.2]3.3.2.1. Apply the Flow Activity Traversal Subprocess to the activity identified by the Flow Tree Traversal Subprocess in the traversal direction and a previous traversal direction of previous traversal direction (Recursive call \u2013 make sure the 'next' activity is OK)",
    "232": "[SB.2.2]3.3.3. Exit Flow Activity Traversal Subprocess -(Return the results of the recursive Flow Activity Traversal Subprocess) Possible exit from recursion",
    "565": "[SB.2.2]4. Apply the Check Activity Process to the activity (Make sure the activity is allowed)",
    "922": "[SB.2.2]5. If the Check Activity Process returns True Then",
    "389": "[SB.2.2]5.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity; Exception: SB.2.2-2)",
    "280": "[SB.2.2]6. If the activity is not a leaf node in the activity tree Then (Cannot deliver a non-leaf activity; enter the cluster looking for a leaf)",
    "158": "[SB.2.2]6.1. Apply the Flow Tree Traversal Subprocess to the activity in the traversal direction and a previous traversal direction of n/a with consider children equal to True",
    "636": "[SB.2.2]6.2. If the Flow Tree Traversal Subprocess does not identify an activity Then",
    "33": "[SB.2.2]6.2.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity; End Sequencing Session: as identified by the Flow Tree Traversal Subprocess; Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "159": "[SB.2.2]6.2.1. Exit Flow Activity Traversal Subprocess (Deliverable: False; Next Activity: the activity; Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "1674": "[SB.2.2]6.3. Else",
    "44": "[SB.2.2]6.3.1. If the traversal direction is Backward And the traversal direction returned by the Flow Tree Traversal Subprocess is Forward Then (Check if we are flowing backward through a forward only cluster - must move forward instead)",
    "22": "[SB.2.2]6.3.1.1. Apply the Flow Activity Traversal Subprocess to the activity identified by the Flow Tree Traversal Subprocess in the Forward direction with the previous traversal direction of Backward (Recursive call \u2013 Make sure the identified activity is OK)",
    "1622": "[SB.2.2]6.3.2. Else",
    "29": "[SB.2.2]6.3.2.1. Apply the Flow Activity Traversal Subprocess to the activity identified by the Flow Tree Traversal Subprocess in the traversal direction and a previous traversal direction of n/a (Recursive call \u2013 Make sure the identified activity is OK)",
    "227": "[SB.2.2]6.3.3. Exit Flow Activity Traversal Subprocess - (Return the results of the recursive Flow Activity Traversal Subprocess) Possible exit from recursion",
    "359": "[SB.2.2]7. Exit Flow Activity Traversal Subprocess (Deliverable: True; Next Activity: the activity; Exception: n/a ) Found a leaf",
    "508": "[SB.2.3]1. The candidate activity is the activity The candidate activity is where we start 'flowing' from",
    "4": "[SB.2.3]2. Apply the Flow Tree Traversal Subprocess to the candidate activity in the traversal direction and a previous traversal direction of n/a with consider children equal to the consider children flag (Attempt to move away from the starting activity, one activity in the specified direction)",
    "491": "[SB.2.3]3. If the Flow Tree Traversal Subprocess does not identify an activity Then (No activity to move to)",
    "41": "[SB.2.3]3.1. Exit Flow Subprocess (Identified Activity: candidate activity; Deliverable: False; End Sequencing Session: as identified by the Flow Tree Traversal Subprocess; Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "205": "[SB.2.3]3.1. Exit Flow Subprocess (Identified Activity: candidate activity; Deliverable: False; Exception: exception identified by the Flow Tree Traversal Subprocess)",
    "1701": "[SB.2.3]4. Else",
    "557": "[SB.2.3]4.1. Candidate activity is the activity identified by the Flow Tree Traversal Subprocess",
    "48": "[SB.2.3]4.2. Apply the Flow Activity Traversal Subprocess to the candidate activity in the traversal direction and a previous traversal direction of n/a (Validate the candidate activity and traverse until a valid leaf is encountered)",
    "17": "[SB.2.3]4.3.Exit Flow Subprocess (Identified Activity: the activity identified by the Flow Activity Traversal Subprocess; Deliverable: as identified by the Flow Activity Traversal Subprocess; Exception: exception identified by the Flow Activity Traversal Subprocess)",
    "0": "[SB.2.3]4.3.Exit Flow Subprocess (Identified Activity: the activity identified by the Flow Activity Traversal Subprocess; Deliverable: as identified by the Flow Activity Traversal Subprocess;End Sequencing Session: value identified by the Flow Activity Traversal Subprocess; Exception: exception identified by the Flow Activity Traversal Subprocess)",
    "980": "[SB.2.4]1. If the traversal direction is Forward Then",
    "445": "[SB.2.4]1.1. Apply the Sequencing Rules Check Process to the activity and the Stop Forward Traversal sequencing rules",
    "730": "[SB.2.4]1.2. If the Sequencing Rules Check Process does not return Nil Then",
    "558": "[SB.2.4]1.2.1. Exit Choice Activity Traversal Subprocess (Reachable: False; Exception: SB.2.4-1)",
    "611": "[SB.2.4]1.3. Exit Choice Activity Traversal Subprocess (Reachable: True; Exception: n/a )",
    "971": "[SB.2.4]2. If the traversal direction is Backward Then",
    "1104": "[SB.2.4]2.1. If the activity has a parent Then",
    "584": "[SB.2.4]2.1.1. If Sequencing Control Forward Only for the parent of the activity is True Then",
    "548": "[SB.2.4]2.1.1.1. Exit Choice Activity Traversal Subprocess (Reachable: False; Exception: SB.2.4-2)",
    "1623": "[SB.2.4]2.1.2. Else",
    "237": "[SB.2.4]2.1.2.1. Exit Choice Activity Traversal Subprocess (Reachable: False; Exception: SB.2.4-3) (Cannot walk backward from the root of the activity tree)",
    "612": "[SB.2.4]2.2. Exit Choice Activity Traversal Subprocess (Reachable: True; Exception: n/a )",
    "498": "[SB.2.5]1. If the Current Activity is Defined Then (Make sure the sequencing session has not already begun)",
    "455": "[SB.2.5]1.1. Exit Start Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.5-1) (Nothing to deliver)",
    "318": "[SB.2.5]2. If the root of the activity tree is a leaf Then (Before starting, make sure the activity tree contains more than one activity)",
    "240": "[SB.2.5]2.1. Exit Start Sequencing Request Process (Delivery Request: the root of the activity tree; Exception: n/a) (Only one activity, it must be a leaf)",
    "315": "[SB.2.5]2.5 Rustici Extension - This course has a property that indicates we should always flow to the first SCO, so find it and return it",
    "1048": "[SB.2.5]2.5.1. Get the ordered list of activities",
    "923": "[SB.2.5]2.5.2. Loop to find the first deliverable activity",
    "1688": "[SB.2.5]3. Else ",
    "164": "[SB.2.5]3.1. Apply the Flow Subprocess to the root of the activity tree in the Forward direction with consider children equal to True (Attempt to flow into the activity tree)",
    "972": "[SB.2.5]3.2. If the Flow Subprocess returns False Then",
    "65": "[SB.2.5]3.2.1. Exit Start Sequencing Request Process (Delivery Request: n/a; End Sequencing Session: as identified by the Flow Subprocess; Exception: the exception identified by the Flow Subprocess) (Nothing to deliver)",
    "233": "[SB.2.5]3.2.1. Exit Start Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Flow Subprocess) (Nothing to deliver)",
    "1649": "[SB.2.5]3.3. Else ",
    "325": "[SB.2.5]3.3.1. Exit Start Sequencing Request Process (Delivery Request: the activity identified by the Flow Subprocess; Exception: n/a)",
    "499": "[SB.2.6]1. If the Current Activity is Defined Then (Make sure the sequencing session has not already begun)",
    "400": "[SB.2.6]1.1. Exit Resume All Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.6-1) (Nothing to deliver)",
    "401": "[SB.2.6]2.1. Exit Resume All Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.6-2) (Nothing to deliver)",
    "58": "[SB.2.6]3.Exit Resume All Sequencing Request Process (Delivery Request: the activity identified by the Suspended Activity; Exception: n/a) (The Delivery Request Process validates that the Suspended Activity can be delivered)",
    "500": "[SB.2.7]1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "422": "[SB.2.7]1.1. Exit Continue Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.7-1) (Nothing to deliver)",
    "708": "[SB.2.7]2. If the activity is not the root activity of the activity tree Then",
    "299": "[SB.2.7]2.1. If Sequencing Control Flow for the parent of the activity is False Then (Confirm a 'flow' traversal is allowed from the activity)",
    "566": "[SB.2.7]2.1.1. Exit Flow Tree Traversal Subprocess (Delivery Request: n/a; Exception: SB.2.7-2)",
    "585": "[SB.2.7]2.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Exception: SB.2.7-2 )",
    "136": "[SB.2.7]3. Apply the Flow Subprocess to the Current Activity in the Forward direction with consider children equal to False (Flow in a forward direction to the next allowed activity)",
    "987": "[SB.2.7]4. If the Flow Subprocess returns False Then",
    "63": "[SB.2.7]4.1. Exit Continue Sequencing Request Process (Delivery Request: n/a; End Sequencing Session: as identified by the Flow Subprocess; Exception: the exception identified by the Flow Subprocess) (Nothing to deliver)",
    "228": "[SB.2.7]4.1. Exit Continue Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Flow Subprocess) (Nothing to deliver)",
    "1702": "[SB.2.7]5. Else",
    "319": "[SB.2.7]5.1. Exit Continue Sequencing Request Process (Delivery Request: the activity identified by the Flow Subprocess; Exception: n/a )",
    "501": "[SB.2.8]1. If the Current Activity is Not Defined Then (Make sure the sequencing session has already begun)",
    "409": "[SB.2.8]1.1. Exit Previous Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.8-1 ) (Nothing to deliver)",
    "709": "[SB.2.8]2. If the activity is not the root activity of the activity tree Then",
    "300": "[SB.2.8]2.1. If Sequencing Control Flow for the parent of the activity is False Then (Confirm a 'flow' traversal is allowed from the activity)",
    "567": "[SB.2.8]2.1.1. Exit Flow Tree Traversal Subprocess (Delivery Request: n/a; Exception: SB.2.8-2)",
    "593": "[SB.2.8]2.1.1. Exit Flow Tree Traversal Subprocess (Next Activity: Nil; Exception: SB.2.8-2)",
    "131": "[SB.2.8]3. Apply the Flow Subprocess to the Current Activity in the Backward direction with consider children equal to False (Flow in a backward direction to the next allowed activity)",
    "988": "[SB.2.8]4. If the Flow Subprocess returns False Then",
    "229": "[SB.2.8]4.1. Exit Previous Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Flow Subprocess) (Nothing to deliver)",
    "1703": "[SB.2.8]5. Else",
    "324": "[SB.2.8]5.1. Exit Previous Sequencing Request Process (Delivery Request: the activity identified by the Flow Subprocess; Exception: n/a)",
    "128": "[SB.2.9.1]1. Apply the Choice Flow Tree Traversal Subprocess to the activity in the traversal direction (Attempt to move away from the activity, 'one' activity in the specified direction)",
    "731": "[SB.2.9.1]2. If the Choice Flow Tree Traversal Subprocess returned Nil Then",
    "710": "[SB.2.9.1]2.1. Exit Choice Flow Subprocess (Identified Activity the activity)",
    "1675": "[SB.2.9.1]3. Else",
    "338": "[SB.2.9.1]3.1. Exit Choice Flow Subprocess (Identified Activity the activity identified by the Choice Flow Tree Traversal Subprocess)",
    "960": "[SB.2.9.2]1. If the traversal direction is Forward Then",
    "257": "[SB.2.9.2]1.1. If the activity is the last activity in a forward preorder tree traversal of the activity tree Then (Cannot walk off the activity tree)",
    "74": "[SB.2.9.2]1.1. If the activity is the last available activity in a forward preorder tree traversal of the activity tree Or (the activity is the Root of the Activity Tree) Then (Cannot walk off the activity tree)",
    "683": "[SB.2.9.2]1.1.1. Exit Choice Flow Tree Traversal Subprocess (Next Activity: Nil)",
    "479": "[SB.2.9.2]1.2. If the activity is the last activity in the activity's parent's list of Available Children Then",
    "137": "[SB.2.9.2]1.2.1.  Apply the Choice Flow Tree Traversal Subprocess to the activity's parent in the Forward direction (Recursion - Move to the activity's parent's next forward sibling)",
    "143": "[SB.2.9.2]1.2.2. Exit Choice Flow Tree Traversal Subprocess (Next Activity: the results of the recursive Choice Flow Tree Traversal Subprocess) (Return the result of the recursion)",
    "1624": "[SB.2.9.2]1.3. Else",
    "301": "[SB.2.9.2]1.3.1. Traverse the tree, forward preorder, one activity to the next activity, in the activity's parent's list of Available Children",
    "446": "[SB.2.9.2]1.3.2. Exit Choice Flow Tree Traversal Subprocess (Next Activity: the activity identified by the traversal)",
    "951": "[SB.2.9.2]2. If the traversal direction is Backward Then",
    "456": "[SB.2.9.2]2.1. If the activity is the root activity of the tree Then (Cannot walk off the root of the activity tree)",
    "684": "[SB.2.9.2]2.1.1. Exit Choice Flow Tree Traversal Subprocess (Next Activity: Nil)",
    "472": "[SB.2.9.2]2.2. If the activity is the first activity in the activity's parent's list of Available Children Then",
    "135": "[SB.2.9.2]2.2.1. Apply the Choice Flow Tree Traversal Subprocess to the activity's parent in the Backward direction (Recursion \u2013 Move to the activity's parent's next backward sibling)",
    "138": "[SB.2.9.2]2.2.1.1. Exit Choice Flow Tree Traversal Subprocess (Next Activity: the results of the recursive Choice Flow Tree Traversal Subprocess) (Return the result of the recursion)",
    "1625": "[SB.2.9.2]2.3. Else",
    "268": "[SB.2.9.2]2.3.1. Traverse the tree, reverse preorder, one activity to the previous activity, from the activity's parent's list of Available Children",
    "447": "[SB.2.9.2]2.3.2. Exit Choice Flow Tree Traversal Subprocess (Next Activity: the activity identified by the traversal)",
    "502": "[SB.2.9]1. If there is no target activity Then (There must be a target activity for choice) targetActivity=",
    "448": "[SB.2.9]1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-1) (Nothing to deliver)",
    "210": "[SB.2.9]10. Case: Current Activity and common ancestor are the same Or Current Activity is Not Defined (Case #3 - path to the target is forward in the activity tree)",
    "287": "[SB.2.9]10. Case: Target activity is the common ancestor of the Current Activity (Case #4 - path to the target is backward in the activity tree)",
    "344": "[SB.2.9]10.1. Form the activity path as the ordered series of activities from the Current Activity to the target activity, inclusive",
    "242": "[SB.2.9]10.1. Form the activity path as the ordered series of activities from the common ancestor to the target activity, exclusive of the target activity",
    "1065": "[SB.2.9]10.2. If the activity path is Empty Then",
    "410": "[SB.2.9]10.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "989": "[SB.2.9]10.3. For each activity on the activity path",
    "515": "[SB.2.9]10.3.1. Apply the Choice Activity Traversal Subprocess to the activity in the Forward direction",
    "662": "[SB.2.9]10.3.1. If the activity is not the last activity in the activity path Then",
    "196": "[SB.2.9]10.3.1.1. If the Sequencing Control Choice Exit for the activity is False Then (Make sure an activity that should not exit will exit if the target is delivered)",
    "573": "[SB.2.9]10.3.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "702": "[SB.2.9]10.3.2. If the Choice Activity Traversal Subprocess returns False Then",
    "139": "[SB.2.9]10.3.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "18": "[SB.2.9]10.3.3. If Activity is Active for the activity is False And (the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "394": "[SB.2.9]10.3.3.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-6) (Nothing to deliver)",
    "1426": "[SB.2.9]10.4. Break All Cases",
    "288": "[SB.2.9]11. Case: Target activity is the common ancestor of the Current Activity (Case #4 - path to the target is backward in the activity tree)",
    "251": "[SB.2.9]11.1. Form the activity path as the ordered series of activities from the Current Activity to the common ancestor, excluding the common ancestor",
    "345": "[SB.2.9]11.1. Form the activity path as the ordered series of activities from the Current Activity to the common ancestor, inclusive",
    "346": "[SB.2.9]11.1. Form the activity path as the ordered series of activities from the Current Activity to the target activity, inclusive",
    "1405": "[SB.2.9]11.10. Break All Cases",
    "1066": "[SB.2.9]11.2. If the activity path is Empty Then",
    "411": "[SB.2.9]11.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "990": "[SB.2.9]11.3. For each activity on the activity path",
    "1002": "[SB.2.9]11.3. Set constrained activity to Undefined",
    "663": "[SB.2.9]11.3.1. If the activity is not the last activity in the activity path Then",
    "197": "[SB.2.9]11.3.1.1. If the Sequencing Control Choice Exit for the activity is False Then (Make sure an activity that should not exit will exit if the target is delivered)",
    "377": "[SB.2.9]11.3.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-7) (Nothing to deliver)",
    "1427": "[SB.2.9]11.4. Break All Cases",
    "574": "[SB.2.9]11.4. For each activity on the activity path (Walk up the tree to the common ancestor)",
    "206": "[SB.2.9]11.4.1. If the Sequencing Control Choice Exit for the activity is False Then - Make sure an activity that should not exit will exit if the target is delivered",
    "664": "[SB.2.9]11.4.1. If the activity is not the last activity in the activity path Then",
    "594": "[SB.2.9]11.4.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "198": "[SB.2.9]11.4.1.1. If the Sequencing Control Choice Exit for the activity is False Then - Make sure an activity that should not exit will exit if the target is delivered",
    "575": "[SB.2.9]11.4.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "402": "[SB.2.9]11.4.2. If constrained activity is Undefined Then (Find the closest constrained activity to the current activity)",
    "732": "[SB.2.9]11.4.2.1. If adlseq:constrainedChoice for the activity is True Then",
    "924": "[SB.2.9]11.4.2.1.1.Set constrained activity to activity: '",
    "981": "[SB.2.9]11.5. If constrained activity is Defined Then",
    "469": "[SB.2.9]11.5.1. If the target activity is Forward in the activity tree relative to the constrained activity Then",
    "529": "[SB.2.9]11.5.1.1. traverse is Forward ('Flow' in a forward direction to see what activity comes next)",
    "1597": "[SB.2.9]11.5.2. Else",
    "516": "[SB.2.9]11.5.2.1. traverse is Backward ('Flow' in a backward direction to see what activity comes next)",
    "523": "[SB.2.9]11.5.3. Apply the Choice Flow Subprocess to the constrained activity in the traverse direction",
    "559": "[SB.2.9]11.5.4. Set activity to consider to the activity identified by the Choice FlowSubprocess",
    "7": "[SB.2.9]11.5.5. If the target activity is Not an available descendent of the activity to consider And the target activity is Not the activity to consider And the target activity is Not the constrained activity Then (Make sure the target activity is within the set of 'flow' constrained choices)",
    "5": "[SB.2.9]11.5.5. If the target activity is Not an available descendent of the activity to consider And the target activity is Not the activity to considered And the target activity is Not the constrained activity Then (Make sure the target activity is within the set of 'flow' constrained choices)",
    "595": "[SB.2.9]11.5.5.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "243": "[SB.2.9]11.6. Form the activity path as the ordered series of activities from the common ancestor to the target activity, exclusive of the target activity",
    "1067": "[SB.2.9]11.7. If the activity path is Empty Then",
    "412": "[SB.2.9]11.7.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "305": "[SB.2.9]11.8. If the target activity is forward in the activity tree relative to the Current Activity Then (Walk toward the target activity)",
    "973": "[SB.2.9]11.8.1. For each activity on the activity path",
    "234": "[SB.2.9]11.8.1.1. Apply the Choice Activity Traversal Subprocess to the activity in the Forward direction (to check for Stop Forward Traversal violations) i=",
    "685": "[SB.2.9]11.8.1.2. If the Choice Activity Traversal Subprocess returns False Then",
    "132": "[SB.2.9]11.8.1.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "15": "[SB.2.9]11.8.1.3. If Activity is Active for the activity is False And(the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "576": "[SB.2.9]11.8.1.3.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "1650": "[SB.2.9]11.9. Else",
    "974": "[SB.2.9]11.9.1. For each activity on the activity path",
    "577": "[SB.2.9]11.9.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "289": "[SB.2.9]11.Case: Target activity is forward from the common ancestor activity (Case #5 - target is a descendent activity of the common ancestor)",
    "925": "[SB.2.9]12. If the target activity is a leaf activity Then",
    "492": "[SB.2.9]12.1. Exit Choice Sequencing Request Process (Delivery Request: the target activity; Exception: n/a)",
    "347": "[SB.2.9]12.1. Form the activity path as the ordered series of activities from the Current Activity to the common ancestor, inclusive",
    "1406": "[SB.2.9]12.10. Break All Cases",
    "1068": "[SB.2.9]12.2. If the activity path is Empty Then",
    "413": "[SB.2.9]12.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "1003": "[SB.2.9]12.3. Set constrained activity to Undefined",
    "578": "[SB.2.9]12.4. For each activity on the activity path (Walk up the tree to the common ancestor)",
    "665": "[SB.2.9]12.4.1. If the activity is not the last activity in the activity path Then",
    "199": "[SB.2.9]12.4.1.1. If the Sequencing Control Choice Exit for the activity is False Then - Make sure an activity that should not exit will exit if the target is delivered",
    "378": "[SB.2.9]12.4.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-7) (Nothing to deliver)",
    "403": "[SB.2.9]12.4.2. If constrained activity is Undefined Then (Find the closest constrained activity to the current activity)",
    "733": "[SB.2.9]12.4.2.1. If adlseq:constrainedChoice for the activity is True Then",
    "961": "[SB.2.9]12.4.2.1.1.Set constrained activity to activity",
    "982": "[SB.2.9]12.5. If constrained activity is Defined Then",
    "470": "[SB.2.9]12.5.1. If the target activity is Forward in the activity tree relative to the constrained activity Then",
    "530": "[SB.2.9]12.5.1.1. traverse is Forward ('Flow' in a forward direction to see what activity comes next)",
    "1598": "[SB.2.9]12.5.2. Else",
    "517": "[SB.2.9]12.5.2.1. traverse is Backward ('Flow' in a backward direction to see what activity comes next)",
    "524": "[SB.2.9]12.5.3. Apply the Choice Flow Subprocess to the constrained activity in the traverse direction",
    "560": "[SB.2.9]12.5.4. Set activity to consider to the activity identified by the Choice FlowSubprocess",
    "6": "[SB.2.9]12.5.5. If the target activity is Not an available descendent of the activity to consider And the target activity is Not the activity to considered And the target activity is Not the constrained activity Then (Make sure the target activity is within the set of 'flow' constrained choices)",
    "531": "[SB.2.9]12.5.5.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-8)",
    "244": "[SB.2.9]12.6. Form the activity path as the ordered series of activities from the common ancestor to the target activity, exclusive of the target activity",
    "1069": "[SB.2.9]12.7. If the activity path is Empty Then",
    "414": "[SB.2.9]12.7.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "306": "[SB.2.9]12.8. If the target activity is forward in the activity tree relative to the Current Activity Then (Walk toward the target activity)",
    "975": "[SB.2.9]12.8.1. For each activity on the activity path",
    "509": "[SB.2.9]12.8.1.1. Apply the Choice Activity Traversal Subprocess to the activity in the Forward direction",
    "686": "[SB.2.9]12.8.1.2. If the Choice Activity Traversal Subprocess returns False Then",
    "133": "[SB.2.9]12.8.1.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "16": "[SB.2.9]12.8.1.3. If Activity is Active for the activity is False And(the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "379": "[SB.2.9]12.8.1.3.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-6) (Nothing to deliver)",
    "1651": "[SB.2.9]12.9. Else",
    "976": "[SB.2.9]12.9.1. For each activity on the activity path",
    "380": "[SB.2.9]12.9.1.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-6) (Nothing to deliver)",
    "290": "[SB.2.9]12.Case: Target activity is forward from the common ancestor activity (Case #5 - target is a descendent activity of the common ancestor)",
    "51": "[SB.2.9]13. Apply the Flow Subprocess to the target activity in the Forward direction with consider children equal to True (The identified activity is a cluster. Enter the cluster and attempt to find a descendent leaf to deliver)",
    "926": "[SB.2.9]13. If the target activity is a leaf activity Then",
    "493": "[SB.2.9]13.1. Exit Choice Sequencing Request Process (Delivery Request: the target activity; Exception: n/a)",
    "52": "[SB.2.9]14. Apply the Flow Subprocess to the target activity in the Forward direction with consider children equal to True (The identified activity is a cluster. Enter the cluster and attempt to find a descendent leaf to deliver)",
    "252": "[SB.2.9]14. If the Flow Subprocess returns False Then (Nothing to deliver, but we succeeded in reaching the target activity - move the current activity)",
    "646": "[SB.2.9]14.1. Apply the Terminate Descendent Attempts Process to the common ancestor",
    "838": "[SB.2.9]14.2. Apply the End Attempt Process to the common ancestor",
    "883": "[SB.2.9]14.3. Set the Current Activity to the target activity",
    "438": "[SB.2.9]14.4. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-9) (Nothing to deliver)",
    "1689": "[SB.2.9]15. Else",
    "253": "[SB.2.9]15. If the Flow Subprocess returns False Then (Nothing to deliver, but we succeeded in reaching the target activity - move the current activity)",
    "647": "[SB.2.9]15.1. Apply the Terminate Descendent Attempts Process to the common ancestor",
    "310": "[SB.2.9]15.1. Exit Choice Sequencing Request Process (Delivery Request: for the activity identified by the Flow Subprocess; Exception: n/a)",
    "839": "[SB.2.9]15.2. Apply the End Attempt Process to the common ancestor",
    "884": "[SB.2.9]15.3. Set the Current Activity to the target activity",
    "439": "[SB.2.9]15.4. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-9) (Nothing to deliver)",
    "1690": "[SB.2.9]16. Else",
    "311": "[SB.2.9]16.1. Exit Choice Sequencing Request Process (Delivery Request: for the activity identified by the Flow Subprocess; Exception: n/a)",
    "333": "[SB.2.9]2.\tForm the activity path as the ordered series of activities from root of the activity tree to the target activity, inclusive",
    "734": "[SB.2.9]2. If the target activity is not the root of the activity tree Then",
    "217": "[SB.2.9]2.1. If the Available Children for the parent of the target activity does not contain the target activity Then (The activity is currently not available)",
    "423": "[SB.2.9]2.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-2) (Nothing to deliver)",
    "1028": "[SB.2.9]3.\tFor each activity in the activity path\t",
    "316": "[SB.2.9]3. Form the activity path as the ordered series of activities from the root of the activity tree to the target activity, inclusive",
    "793": "[SB.2.9]3.1.\tIf the activity is Not the root of the activity tree Then",
    "262": "[SB.2.9]3.1.1.\tIf the Available Children for the parent of the activity does not contain the activity Then\t(The activity is currently not available.)",
    "395": "[SB.2.9]3.1.1.1.\tExit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-2)\t(Nothing to deliver.)",
    "247": "[SB.2.9]3.2.\tApply the Sequencing Rules Check Process to the activity and the Hide from Choice sequencing rules\t(Cannot choose something that is hidden.)",
    "735": "[SB.2.9]3.3.\tIf the Sequencing Rules Check Process does not return Nil Then",
    "220": "[SB.2.9]3.3.1\tExit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-3)\tNothing to deliver. (Cannot choose something that is hidden.)",
    "1049": "[SB.2.9]4. For each activity in the activity path",
    "254": "[SB.2.9]4.1. Apply the Sequencing Rules Check Process to the activity and the Hide from Choice sequencing rules (Cannot choose something that is hidden)",
    "221": "[SB.2.9]4.1. If the Sequencing Control Mode Choice for the parent of the target activity is False Then (Confirm that control mode allow 'choice' of the target)",
    "424": "[SB.2.9]4.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-4) (Nothing to deliver)",
    "736": "[SB.2.9]4.2. If the Sequencing Rules Check Process does not return Nil Then",
    "425": "[SB.2.9]4.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-3) (Nothing to deliver)",
    "748": "[SB.2.9]4.If the target activity is not the root of the activity tree Then",
    "579": "[SB.2.9]5. If the Current Activity is Defined Then (Has the sequencing session already begun?)",
    "637": "[SB.2.9]5.1. Find the common ancestor of the Current Activity and the target activity",
    "222": "[SB.2.9]5.1. If the Sequencing Control Mode Choice for the parent of the target activity is False Then (Confirm that control mode allow 'choice' of the target)",
    "426": "[SB.2.9]5.1.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-4) (Nothing to deliver)",
    "749": "[SB.2.9]5.If the target activity is not the root of the activity tree Then",
    "1704": "[SB.2.9]6. Else",
    "580": "[SB.2.9]6. If the Current Activity is Defined Then (Has the sequencing session already begun?)",
    "638": "[SB.2.9]6.1. Find the common ancestor of the Current Activity and the target activity",
    "373": "[SB.2.9]6.1. Set common ancestor is the root of the activity tree (No, choosing the target will start the sequencing session)",
    "503": "[SB.2.9]7. Case: Current Activity and target activity are identical (Case #1 - select the current activity)",
    "1705": "[SB.2.9]7. Else",
    "937": "[SB.2.9]7.1. Break All Cases (Nothing to do in this case)",
    "374": "[SB.2.9]7.1. Set common ancestor is the root of the activity tree (No, choosing the target will start the sequencing session)",
    "504": "[SB.2.9]8. Case: Current Activity and target activity are identical (Case #1 - select the current activity)",
    "363": "[SB.2.9]8. Case: Current Activity and the target activity are siblings (Case #2 - same cluster; move toward the target activity)",
    "938": "[SB.2.9]8.1. Break All Cases (Nothing to do in this case)",
    "10": "[SB.2.9]8.1. Form the activity list as the ordered sequence of activities from the Current Activity to the target activity, exclusive of the target activity (We are attempted to walk toward the target activity. Once we reach the target activity, we don't need to test it.)",
    "829": "[SB.2.9]8.2. If the activity list is Empty Then (Nothing to choose)",
    "427": "[SB.2.9]8.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "449": "[SB.2.9]8.3. If the target activity occurs after the Current Activity in preorder traversal of the activity tree Then",
    "1341": "[SB.2.9]8.3.1. traverse is Forward",
    "1676": "[SB.2.9]8.4. Else",
    "1315": "[SB.2.9]8.4.1. traverse is Backward",
    "1004": "[SB.2.9]8.5. For each activity on the activity list",
    "518": "[SB.2.9]8.5.1. Apply the Choice Activity Traversal Subprocess to the activity in the traverse direction",
    "711": "[SB.2.9]8.5.2. If the Choice Activity Traversal Subprocess returns False Then",
    "140": "[SB.2.9]8.5.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "1446": "[SB.2.9]8.6. Break All Cases",
    "213": "[SB.2.9]9. Case: Current Activity and common ancestor are the same Or Current Activity is Not Defined (Case #3 - path to the target is forward in the activity tree)",
    "364": "[SB.2.9]9. Case: Current Activity and the target activity are siblings (Case #2 - same cluster; move toward the target activity)",
    "11": "[SB.2.9]9.1. Form the activity list as the ordered sequence of activities from the Current Activity to the target activity, exclusive of the target activity (We are attempted to walk toward the target activity. Once we reach the target activity, we don't need to test it.)",
    "248": "[SB.2.9]9.1. Form the activity path as the ordered series of activities from the common ancestor to the target activity, exclusive of the target activity",
    "830": "[SB.2.9]9.2. If the activity list is Empty Then (Nothing to choose)",
    "1088": "[SB.2.9]9.2. If the activity path is Empty Then",
    "428": "[SB.2.9]9.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: SB.2.9-5) (Nothing to deliver)",
    "1005": "[SB.2.9]9.3. For each activity on the activity path",
    "450": "[SB.2.9]9.3. If the target activity occurs after the Current Activity in preorder traversal of the activity tree Then",
    "525": "[SB.2.9]9.3.1. Apply the Choice Activity Traversal Subprocess to the activity in the Forward direction",
    "1342": "[SB.2.9]9.3.1. traverse is Forward",
    "712": "[SB.2.9]9.3.2. If the Choice Activity Traversal Subprocess returns False Then",
    "141": "[SB.2.9]9.3.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "19": "[SB.2.9]9.3.3. If Activity is Active for the activity is False And (the activity is Not the common ancestor And adlseq:preventActivation for the activity is True) Then (If the activity being considered is not already active, make sure we are allowed to activate it)",
    "603": "[SB.2.9]9.3.3.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: ",
    "1447": "[SB.2.9]9.4. Break All Cases",
    "1677": "[SB.2.9]9.4. Else",
    "1316": "[SB.2.9]9.4.1. traverse is Backward",
    "1006": "[SB.2.9]9.5. For each activity on the activity list",
    "519": "[SB.2.9]9.5.1. Apply the Choice Activity Traversal Subprocess to the activity in the traverse direction",
    "713": "[SB.2.9]9.5.2. If the Choice Activity Traversal Subprocess returns False Then",
    "142": "[SB.2.9]9.5.2.1. Exit Choice Sequencing Request Process (Delivery Request: n/a; Exception: the exception identified by the Choice Activity Traversal Subprocess) (Nothing to deliver)",
    "1448": "[SB.2.9]9.6. Break All Cases",
    "542": "[SCORM Engine Extension] Child Set is Empty and Control.Package.Properties.RollupEmptySetToUnknown=",
    "561": "[SR.1]1. If the activity does not have children Then (Cannot apply selection to a leaf activity)",
    "1250": "[SR.1]1.1. Exit Select Children Process",
    "175": "[SR.1]2. If Activity is Suspended for the activity is True Or the Activity is Active for the activity is True Then (Cannot apply selection to a suspended or active activity)",
    "1251": "[SR.1]2.1. Exit Select Children Process",
    "885": "[SR.1]3. Case: the Selection Timing for the activity is Never",
    "1252": "[SR.1]3.1. Exit Select Children Process",
    "894": "[SR.1]4. Case: the Selection Timing for the activity is Once",
    "816": "[SR.1]4.05. If children have not been selected for this activity yet",
    "440": "[SR.1]4.1. If the Activity Progress Status for the activity is False Then (If the activity has not been attempted yet)",
    "771": "[SR.1]4.1.1. If the Selection Count Status for the activity is True Then",
    "886": "[SR.1]4.1.1.1. Initialize child list as an Empty ordered list",
    "868": "[SR.1]4.1.1.2. Iterate Selection Count, for the activity, times",
    "536": "[SR.1]4.1.1.2.1. Randomly select (without replacement) an activity from the children of the activity",
    "339": "[SR.1]4.1.1.2.2. Add the selected activity to the child list, retaining the original (from the activity) relative order of activities",
    "772": "[SR.1]4.1.1.3. Set Available Children for the activity to the child list",
    "1253": "[SR.1]4.2. Exit Select Children Process",
    "737": "[SR.1]5. Case: the Selection Timing for the activity is On Each New Attempt",
    "895": "[SR.1]5.1. Exit Select Children Process (Undefined behavior)",
    "840": "[SR.1]6. Exit Select Children Process (Undefined timing attribute)",
    "537": "[SR.2]1. If the activity does not have children Then (Cannot apply randomization to a leaf activity)",
    "1196": "[SR.2]1.1. Exit Randomize Children Process",
    "155": "[SR.2]2. If Activity is Suspended for the activity is True Or the Activity is Activefor the activity is True Then (Cannot apply randomization to a suspended or active activity)",
    "1197": "[SR.2]2.1. Exit Randomize Children Process",
    "852": "[SR.2]3. Case: the Randomization Timing for the activity is Never",
    "1198": "[SR.2]3.1. Exit Randomize Children Process",
    "859": "[SR.2]4. Case: the Randomization Timing for the activity is Once",
    "781": "[SR.2]4.05. If the activity's children have not already been randomized",
    "441": "[SR.2]4.1. If the Activity Progress Status for the activity is False Then (If the activity has not been attempted yet)",
    "860": "[SR.2]4.1.1. If Randomize Children for the activity is True Then",
    "568": "[SR.2]4.1.1.1. Randomly reorder the activities contained in Available Children for the activity",
    "1199": "[SR.2]4.2. Exit Randomize Children Process",
    "695": "[SR.2]5. Case: the Randomization Timing for the activity is On Each New Attempt",
    "874": "[SR.2]5.1. If Randomize Children for the activity is True Then",
    "586": "[SR.2]5.1.1. Randomly reorder the activities contained in Available Children for the activity",
    "1200": "[SR.2]5.2. Exit Randomize Children Process",
    "831": "[SR.2]6. Exit Randomize Children Process Undefined timing attribute",
    "249": "[TB.2.1]1. Form the activity path as the ordered series of activities from the root of the activity tree to the parent of the Current Activity, inclusive",
    "1218": "[TB.2.1]2. Initialize exit target to Null",
    "307": "[TB.2.1]3. For each activity in the activity path (Evaluate all exit rules along the active path, starting at the root of the activity tree)",
    "553": "[TB.2.1]3.1. Apply the Sequencing Rules Check Process to the activity and the set of Exit actions",
    "738": "[TB.2.1]3.2. If the Sequencing Rules Check Process does not return Nil Then",
    "415": "[TB.2.1]3.2.1. Set the exit target to the activity (Stop at the first activity that has an exit rule evaluating to true)",
    "1530": "[TB.2.1]3.2.2. Break For",
    "1201": "[TB.2.1]4. If exit target is Not Null Then",
    "352": "[TB.2.1]4.1. Apply the Terminate Descendent Attempts Process to the exit target (End the current attempt on all active descendents)",
    "466": "[TB.2.1]4.2. Apply the End Attempt Process to the exit target (End the current attempt on the 'exiting' activity)",
    "348": "[TB.2.1]4.3. Set the Current Activity to the exit target (Move the current activity to the activity that identified for termination)",
    "962": "[TB.2.1]5. Exit Sequencing Exit Action Rules Subprocess",
    "340": "[TB.2.2]1. If Activity is Suspended for the Current Activity is True Then (Do not apply post condition rules to a suspended activity)",
    "896": "[TB.2.2]1.1. Exit Sequencing Post Condition Rules Subprocess",
    "190": "[TB.2.2]2. Apply the Sequencing Rules Check Process to the Current Activity and the set of Post Condition actions (Apply the post condition rules to the current activity)",
    "764": "[TB.2.2]3. If the Sequencing Rules Check Process does not return Nil Then",
    "587": "[TB.2.2]3.1. If the Sequencing Rules Check Process returned Retry, Continue, Or Previous Then",
    "47": "[TB.2.2]3.1.1. Exit Sequencing Post Condition Rules Subprocess (Sequencing Request: the value returned by the Sequencing Rules Check Process; Termination Request: n/a) (Attempt to override any pending sequencing request with this one)",
    "620": "[TB.2.2]3.2. If the Sequencing Rules Check Process returned Exit Parent Or Exit All Then",
    "85": "[TB.2.2]3.2.1. Exit Sequencing Post Condition Rules Subprocess (Sequencing Request: n/a; Termination Request: the value returned by the Sequencing Rules Check Process) (Terminate the appropriate activity(s))",
    "750": "[TB.2.2]3.3. If the Sequencing Rules Check Process returned Retry All Then",
    "30": "[TB.2.2]3.3.1. Exit Sequencing Post Condition Rules Subprocess (Termination Request: Exit All; Sequencing Request: Retry) (Terminate all active activities and move the current activity to the root of the activity tree; then perform an 'in-process' start)",
    "484": "[TB.2.2]4. Exit Sequencing Post Condition Rules Subprocess (Sequencing Request: n/a; Sequencing Request; n/a)",
    "367": "[TB.2.3]1. If the Current Activity is Not Defined Then (If the sequencing session has not begun, there is nothing to terminate)",
    "381": "[TB.2.3]1.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-1)",
    "88": "[TB.2.3]2. If (the termination request is Exit Or Abandon) And Activity is Active for the Current Activity is False Then (If the current activity has already been terminated, there is nothing to terminate)",
    "382": "[TB.2.3]2.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-2)",
    "1150": "[TB.2.3]3. Case: termination request is Exit",
    "383": "[TB.2.3]3.1. Apply the End Attempt Process to the Current Activity  (Ensure the state of the current activity is up to date)",
    "241": "[TB.2.3]3.2. Apply the Sequencing Exit Action Rules Subprocess to the Current Activity (Check if any of the current activity's ancestors need to terminate)",
    "1626": "[TB.2.3]3.3. Repeat",
    "1105": "[TB.2.3]3.3.1. Set the processed exit to False",
    "588": "[TB.2.3]3.3.2. Apply the Sequencing Post Condition Rules Subprocess to the Current Activity (",
    "473": "[TB.2.3]3.3.3. If the Sequencing Post Condition Rule Subprocess returned a termination request of Exit All Then",
    "905": "[TB.2.3]3.3.3.1. Change the termination request to Exit All",
    "674": "[TB.2.3]3.3.3.2. Break to the next Case (Process an Exit All Termination Request)",
    "53": "[TB.2.3]3.3.4. If the Sequencing Post Condition Rule Subprocess returned a termination request of Exit Parent Then (If we exit the parent of the current activity, move the current activity to the parent of the current activity.)",
    "281": "[TB.2.3]3.3.4.1. If the Current Activity is Not the root of the activity tree Then (The root of the activity tree does not have a parent to exit)",
    "675": "[TB.2.3]3.3.4.1.1. Set the Current Activity to the parent of the Current Activity",
    "773": "[TB.2.3]3.3.4.1.2. Apply the End Attempt Process to the Current Activity",
    "494": "[TB.2.3]3.3.4.1.3. Set processed exit to True (Need to evaluate post conditions on the new current activity)",
    "1583": "[TB.2.3]3.3.4.2. Else",
    "355": "[TB.2.3]3.3.4.2.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-4)",
    "1627": "[TB.2.3]3.3.5. Else",
    "8": "[TB.2.3]3.3.5.1. If the Current Activity is the Root of the Activity Tree And the sequencing request returned by the Sequencing Post Condition Rule Subprocess is Not Retry Then If the attempt on the root of the Activity Tree is ending without a Retry, the Sequencing Session also ends",
    "404": "[TB.2.3]3.3.5.1.1. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: Exit; Exception: n/a",
    "54": "[TB.2.3]3.6. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: is the sequencing request returned by the Sequencing Post Condition Rule Subprocess, if one exists, otherwise n/a; Exception: n/a)",
    "1070": "[TB.2.3]4. Case: termination request is Exit All",
    "817": "[TB.2.3]4.1.1. Apply the End Attempt Process to the Current Activity",
    "238": "[TB.2.3]4.1.If Activity is Active for the Current Activity is True Then (Has the completion subprocess and rollup been applied to the current activity yet?)",
    "589": "[TB.2.3]4.2. Apply the Terminate Descendent Attempts Process to the root of the activity tree",
    "739": "[TB.2.3]4.3. Apply the End Attempt Process to the root of the activity tree",
    "353": "[TB.2.3]4.4. Set the Current Activity to the root of the activity tree (Move the current activity to the root of the activity tree)",
    "3": "[TB.2.3]4.5. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: is the sequencing request returned by the Sequencing Post Condition Rule Subprocess, if one exists, otherwise an Exit sequencing request; Exception: n/a) Inform the sequencer that the sequencing session has ended",
    "451": "[TB.2.3]4.5.1 Sequencing Request: is the sequencing request returned by the Sequencing Post Condition Rule Subprocess",
    "1029": "[TB.2.3]4.5.2 Otherwise an Exit sequencing request",
    "1007": "[TB.2.3]5. Case: termination request is Suspend All",
    "45": "[TB.2.3]5.1. If (the Activity is Active for the Current Activity is True) Or (the Activity is Suspended for the Current Activity is True) Then (If the current activity is active or already suspended, suspend it and all of its descendents)",
    "510": "[TB.2.3]5.1.0.1. Apply the End Attempt Process to the Current Activity upon Return To LMS (Not in p-code)",
    "1089": "[TB.2.3]5.1.1. Apply the Overall Rollup Process",
    "853": "[TB.2.3]5.1.1. Set the Suspended Activity to the Current Activity",
    "854": "[TB.2.3]5.1.2. Set the Suspended Activity to the Current Activity",
    "1678": "[TB.2.3]5.2. Else",
    "258": "[TB.2.3]5.2.1. If the Current Activity is not the root of the activity tree Then (Make sure the current activity is not the root of the activity tree)",
    "676": "[TB.2.3]5.2.1.1. Set the Suspended Activity to the parent of the Current Activity",
    "1628": "[TB.2.3]5.2.2. Else",
    "263": "[TB.2.3]5.2.2.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-3) (Nothing to suspend)",
    "273": "[TB.2.3]5.3. Form the activity path as the ordered series of all activities from the Suspended Activity to the root of the activity tree, inclusive",
    "1090": "[TB.2.3]5.4. If the activity path is Empty Then",
    "274": "[TB.2.3]5.4.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-5) (Nothing to suspend)",
    "1008": "[TB.2.3]5.5. For each activity in the activity path",
    "639": "[TB.2.3]5.5.1. Set Activity is Active for the activity to False (Activity Identifier=",
    "855": "[TB.2.3]5.5.2. Set Activity is Suspended for the activity to True",
    "354": "[TB.2.3]5.6. Set the Current Activity to the root of the activity tree (Move the current activity to the root of the activity tree)",
    "160": "[TB.2.3]5.7. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: Exit; Exception: n/a) Inform the sequencer that the sequencing session has ended",
    "1091": "[TB.2.3]6. Case: termination request is Abandon",
    "808": "[TB.2.3]6.1. Set Activity is Active for the Current Activity to False",
    "459": "[TB.2.3]6.2. Exit Termination Request Process (Termination Request: Valid; Sequencing Request: n/a; Exception: n/a)",
    "1009": "[TB.2.3]7. Case: termination request is Abandon All",
    "282": "[TB.2.3]7.1. Form the activity path as the ordered series of all activities from the Current Activity to the root of the activity tree, inclusive",
    "1092": "[TB.2.3]7.2. If the activity path is Empty Then",
    "283": "[TB.2.3]7.2.1. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-6) Nothing to abandon",
    "1010": "[TB.2.3]7.3. For each activity in the activity path",
    "869": "[TB.2.3]7.3.1. Set Activity is Active for the activity to False",
    "360": "[TB.2.3]7.4. Set the Current Activity to the root of the activity tree Move the current activity to the root of the activity tree",
    "165": "[TB.2.3]7.5.Exit Termination Request Process (Termination Request: Valid; Sequencing Request: Exit; Exception: n/a) Inform the sequencer that the sequencing session has ended",
    "255": "[TB.2.3]8. Exit Termination Request Process (Termination Request: Not Valid; Sequencing Request: n/a; Exception: TB.2.3-7) Undefined termination request",
    "543": "[UP.1] 4 - 9 Note - duration and time based limit controls are not evaluated in this implementation",
    "384": "[UP.1]1. If Tracked for the activity is False Then (If the activity is not tracked, its limit conditions cannot be violated)",
    "296": "[UP.1]1.1. Exit Limit Conditions Check Process (Limit Condition Violated: False) (Activity is not tracked, no limit conditions can be violated)",
    "144": "[UP.1]2. If the Activity is Active for the activity is True Or the Activity is Suspended for the activity is True Then (Only need to check activities that will begin a new attempt)",
    "687": "[UP.1]2.1. Exit Limit Conditions Check Process (Limit Condition Violated: False)",
    "714": "[UP.1]3. If the Limit Condition Attempt Control for the activity is True Then",
    "89": "[UP.1]3.1. If the Activity Progress Status for the activity is True And the Activity Attempt Count for the activity is greater than or equal (>=) to the Limit Condition Attempt Limit for the activity Then",
    "429": "[UP.1]3.1.1. Exit Limit Conditions Check Process (Limit Condition Violated: True) (Limit conditions have been violated)",
    "326": "[UP.2.1]1. Initialize rule condition bag as an Empty collection (This is used to keep track of the evaluation of the rule's conditions)",
    "740": "[UP.2.1]2. For each Rule Condition for the Sequencing Rule for the activity",
    "102": "[UP.2.1]2.1. Evaluate the rule condition by applying the appropriate tracking information for the activity to the Rule Condition (Evaluate each condition against the activity's tracking information)",
    "703": "[UP.2.1]2.2. If the Rule Condition Operator for the Rule Condition is Not Then",
    "666": "[UP.2.1]2.2.1. Negate the rule condition (Negating 'unknown' results in 'unknown')",
    "291": "[UP.2.1]2.3. Add the value of rule condition to the rule condition bag (Add the evaluation of this condition to the set of evaluated conditions)",
    "375": "[UP.2.1]3. If the rule condition bag is Empty Then (If there are no defined conditions for the rule, the rule does not apply)",
    "613": "[UP.2.1]3.1. Exit Sequencing Rule Check Subprocess (Result: Unknown) (No rule conditions)",
    "62": "[UP.2.1]4. Apply the Rule Combination for the Sequencing Rule to the rule condition bag to produce a single combined rule evaluation ('And' or 'Or' the set of evaluated conditions, based on the sequencing rule definition)",
    "621": "[UP.2.1]5. Exit Sequencing Rule Check Subprocess (Result: the value of rule evaluation) ",
    "304": "[UP.2]1. If the activity includes Sequencing Rules with any of the specified Rule Actions Then (Make sure the activity has rules to evaluate)",
    "191": "[UP.2]1.1. Initialize rules list by selecting the set of Sequencing Rules for the activity that have any of the specified Rule Actions (maintaining original rule ordering",
    "1202": "[UP.2]1.2. For each rule in the rules list",
    "416": "[UP.2]1.2.1. Apply the Sequencing Rule Check Subprocess to the activity and the rule (Evaluate each rule, one at a time)",
    "794": "[UP.2]1.2.2. If the Sequencing Rule Check Subprocess returns True Then",
    "211": "[UP.2]1.2.2.1. Exit Sequencing Rules Check Process (Action: Rule Action for the rule) (Stop at the first rule that evaluates to true - perform the associated action)",
    "460": "[UP.2]2. Exit Sequencing Rules Check Process (Action: Nil) (No rules evaluated to true - do not perform any action)",
    "688": "[UP.3]1. Find the activity that is the common ancestor of the Current Activity (",
    "152": "[UP.3]2. Form the activity path as the ordered series of activities from the Current Activity to the common ancestor, exclusive of the Current Activity and the common ancestor (",
    "526": "[UP.3]3. If the activity path is Not Empty Then (There are some activities that need to be terminated)",
    "1050": "[UP.3]3.1. For each activity in the activity path",
    "474": "[UP.3]3.1.1. Apply the End Attempt Process to the activity (End the current attempt on each activity) Activity-",
    "741": "[UP.3]3.a Rollup the rollup set accumulated during the EndAttempt processes",
    "1011": "[UP.3]4. Exit Terminate Descendent Attempts Process",
    "1490": "[UP.4]1. If the activity (",
    "1012": "[UP.4]1.1. If Tracked for the activity is True Then",
    "861": "[UP.4]1.1.05 Transfer data from the RTE to the sequencing engine",
    "312": "[UP.4]1.1.1.  If the Activity is Suspended for the activity is False Then (The sequencer will not affect the state of suspended activities)",
    "284": "[UP.4]1.1.1.1. If the Completion Set by Content for the activity is False Then (Should the sequencer set the completion status of the activity? )",
    "78": "[UP.4]1.1.1.1.1. If the Attempt Progress Status for the activity is False  And Completion Status was not changed during runtime  Then (Did the content inform the sequencer of the activity's completion status?)",
    "245": "[UP.4]1.1.1.1.1. If the Attempt Progress Status for the activity is False Then (Did the content inform the sequencer of the activity's completion status?)",
    "742": "[UP.4]1.1.1.1.1.1. Set the Attempt Progress Status for the activity to True",
    "715": "[UP.4]1.1.1.1.1.2. Set the Attempt Completion Status for the activity to True",
    "297": "[UP.4]1.1.1.2.  If the Objective Set by Content for the activity is False Then (Should the sequencer set the objective status of the activity?)",
    "862": "[UP.4]1.1.1.2.1. For all objectives associated with the activity",
    "596": "[UP.4]1.1.1.2.1. Get the primary objective (For all objectives associated with the activity)",
    "622": "[UP.4]1.1.1.2.1.1. If the Objective Contributes to Rollup for the objective is True Then",
    "64": "[UP.4]1.1.1.2.1.1.1. If the Objective Progress Status for the objective is False And Success Status was not changed during runtime Then (Did the content inform the sequencer of the activity's rolled-up objective status?)",
    "192": "[UP.4]1.1.1.2.1.1.1. If the Objective Progress Status for the objective is False Then (Did the content inform the sequencer of the activity's rolled-up objective status?)",
    "667": "[UP.4]1.1.1.2.1.1.1.1. Set the Objective Progress Status for the objective to True",
    "657": "[UP.4]1.1.1.2.1.1.1.2. Set the Objective Satisfied Status for the objective to True",
    "1219": "[UP.4]2. Else (The activity has children)",
    "109": "[UP.4]2.1. If the activity includes any child activity whose Activity is Suspended attribute is True Then (The suspended status of the parent is dependent on the suspended status of its children)",
    "832": "[UP.4]2.1.1. Set the Activity is Suspended for the activity to True",
    "1706": "[UP.4]2.2. Else",
    "818": "[UP.4]2.2.1. Set the Activity is Suspended for the activity to False",
    "462": "[UP.4]3. Set the Activity is Active for the activity to False (The current attempt on this the activity has ended)",
    "250": "[UP.4]4. Apply the Overall Rollup Process to the activity (Ensure that any status change to this activity is propagated through the entire activity tree)",
    "235": "[UP.4]4.5 Find all the activities that read the global objectives written by this activity and invoke the overall rollup process on them (not in pseudo code)",
    "527": "[UP.4]4.a. Performance Optimization - Deferring rollup to parent process to ensure minimal rollup set.",
    "457": "[UP.4]4.b. Apply the Overall Rollup Process to the parents of activities affected by write maps (not in pseudo code)",
    "218": "[UP.4]4.c. Performance Optimization - Deferring rollup or activities affected by write maps to parent process to ensure minimal rollup set. (not in pseudo code)",
    "1300": "[UP.4]5. Exit End Attempt Subprocess",
    "313": "[UP.5]1.Apply the Sequencing Rules Check Process to the activity and the Disabled sequencing rules (Make sure the activity is not disabled)",
    "782": "[UP.5]2. If the Sequencing Rules Check Process does not return Nil Then",
    "721": "[UP.5]2.1. Exit Check Activity Process (Result: True) (Activity is Disabled)",
    "396": "[UP.5]3. Apply the Limit Conditions Check Process to the activity (Make the activity does not violate any limit condition)",
    "863": "[UP.5]4. If the Limit Conditions Check Process returns True Then",
    "614": "[UP.5]4.1. Exit Check Activity Process (Result: True) (Limit Condition Has Been Violated)",
    "751": "[UP.5]5. Exit Check Activity Process (Result: False) (Activity is allowed)",
    "292": "[[NB.2.1]8.1.1. If the Activity is Active for the Current Activity is True Then (Make sure the current activity has not already been terminated)",
    "668": "[[SB.2.1]4.3.1.1. If Sequencing Control Forward Only for the activity is True Then",
    "505": "activity.HasChildActivitiesDeliverableViaFlow = false.  Setting possibleNavRequest.WillNeverSucceed = true.",
    "275": "activity.HasSeqRulesRelevantToChoice = false and possibleNavRequest.WillNeverSucceed = false.  Setting possibleNavRequest.WillAlwaysSucceed = true.",
    "356": "activity.IsDeliverable = false and activity.GetSequencingControlFlow = false.  Setting possibleNavRequest.WillNeverSucceed = true.",
    "1491": "controlChoiceExitIsUsed = ",
    "549": "controlChoiceExitIsUsed = true.  Setting WillAlwaysSucceed = false for all possible nav. requests.",
    "1550": "failed to pass logEntry",
    "1742": "false",
    "939": "is the root, therefore the common ancestor of activities ",
    "1745": "null",
    "1746": "true"
};
